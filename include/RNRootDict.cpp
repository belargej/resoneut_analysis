//
// File generated by rootcint at Sat Jul 13 01:11:17 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME RNRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RNRootDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RNUnpack2Root RNUnpack2Root;
      #else
      class RNUnpack2Root  {
         public:
         //friend XX;
         int mesy_num; //
         int caen_num; //
         int adc_counter; //
         int mes_counter; //
         vector< ::RN_module > caen_stack; //
         vector< ::RN_module > mesy_stack; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace sak {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void sak_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("sak", 0 /*version*/, "./sakReadBuffer.hpp", 19,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &sak_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void sak_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void RN_module_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RN_module(void *p = 0);
   static void *newArray_RN_module(Long_t size, void *p);
   static void delete_RN_module(void *p);
   static void deleteArray_RN_module(void *p);
   static void destruct_RN_module(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RN_module*)
   {
      ::RN_module *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RN_module >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RN_module", ::RN_module::Class_Version(), "./RNUnpack2Root.hpp", 49,
                  typeid(::RN_module), DefineBehavior(ptr, ptr),
                  &::RN_module::Dictionary, isa_proxy, 4,
                  sizeof(::RN_module) );
      instance.SetNew(&new_RN_module);
      instance.SetNewArray(&newArray_RN_module);
      instance.SetDelete(&delete_RN_module);
      instance.SetDeleteArray(&deleteArray_RN_module);
      instance.SetDestructor(&destruct_RN_module);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RN_module*)
   {
      return GenerateInitInstanceLocal((::RN_module*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RN_module*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RNUnpack2Root_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RNUnpack2Root_Dictionary();
   static void *new_RNUnpack2Root(void *p = 0);
   static void *newArray_RNUnpack2Root(Long_t size, void *p);
   static void delete_RNUnpack2Root(void *p);
   static void deleteArray_RNUnpack2Root(void *p);
   static void destruct_RNUnpack2Root(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RNUnpack2Root*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RNUnpack2Root) == sizeof(::ROOT::Shadow::RNUnpack2Root));
      ::RNUnpack2Root *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RNUnpack2Root),0);
      static ::ROOT::TGenericClassInfo 
         instance("RNUnpack2Root", "./RNUnpack2Root.hpp", 84,
                  typeid(::RNUnpack2Root), DefineBehavior(ptr, ptr),
                  &RNUnpack2Root_ShowMembers, &RNUnpack2Root_Dictionary, isa_proxy, 4,
                  sizeof(::RNUnpack2Root) );
      instance.SetNew(&new_RNUnpack2Root);
      instance.SetNewArray(&newArray_RNUnpack2Root);
      instance.SetDelete(&delete_RNUnpack2Root);
      instance.SetDeleteArray(&deleteArray_RNUnpack2Root);
      instance.SetDestructor(&destruct_RNUnpack2Root);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RNUnpack2Root*)
   {
      return GenerateInitInstanceLocal((::RNUnpack2Root*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RNUnpack2Root*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RNUnpack2Root_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::RNUnpack2Root*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
TClass *RN_module::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RN_module::Class_Name()
{
   return "RN_module";
}

//______________________________________________________________________________
const char *RN_module::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RN_module*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RN_module::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RN_module*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RN_module::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RN_module*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RN_module::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RN_module*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void RN_module::Streamer(TBuffer &R__b)
{
   // Stream an object of class RN_module.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RN_module::Class(),this);
   } else {
      R__b.WriteClassBuffer(RN_module::Class(),this);
   }
}

//______________________________________________________________________________
void RN_module::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RN_module.
      TClass *R__cl = ::RN_module::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeoAddress", &fGeoAddress);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumOfCh", &fNumOfCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", (void*)&fName);
      R__insp.InspectMember("string", (void*)&fName, "fName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCh", &fCh);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RN_module(void *p) {
      return  p ? new(p) ::RN_module : new ::RN_module;
   }
   static void *newArray_RN_module(Long_t nElements, void *p) {
      return p ? new(p) ::RN_module[nElements] : new ::RN_module[nElements];
   }
   // Wrapper around operator delete
   static void delete_RN_module(void *p) {
      delete ((::RN_module*)p);
   }
   static void deleteArray_RN_module(void *p) {
      delete [] ((::RN_module*)p);
   }
   static void destruct_RN_module(void *p) {
      typedef ::RN_module current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RN_module

//______________________________________________________________________________
namespace ROOT {
   void RNUnpack2Root_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RNUnpack2Root.
      typedef ::ROOT::Shadow::RNUnpack2Root ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::RNUnpack2Root*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mesy_num", &sobj->mesy_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caen_num", &sobj->caen_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc_counter", &sobj->adc_counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mes_counter", &sobj->mes_counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caen_stack", (void*)&sobj->caen_stack);
      R__insp.InspectMember("vector<RN_module>", (void*)&sobj->caen_stack, "caen_stack.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mesy_stack", (void*)&sobj->mesy_stack);
      R__insp.InspectMember("vector<RN_module>", (void*)&sobj->mesy_stack, "mesy_stack.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RNUnpack2Root(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RNUnpack2Root : new ::RNUnpack2Root;
   }
   static void *newArray_RNUnpack2Root(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RNUnpack2Root[nElements] : new ::RNUnpack2Root[nElements];
   }
   // Wrapper around operator delete
   static void delete_RNUnpack2Root(void *p) {
      delete ((::RNUnpack2Root*)p);
   }
   static void deleteArray_RNUnpack2Root(void *p) {
      delete [] ((::RNUnpack2Root*)p);
   }
   static void destruct_RNUnpack2Root(void *p) {
      typedef ::RNUnpack2Root current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RNUnpack2Root

namespace ROOT {
   void vectorlERN_modulegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERN_modulegR_Dictionary();
   static void *new_vectorlERN_modulegR(void *p = 0);
   static void *newArray_vectorlERN_modulegR(Long_t size, void *p);
   static void delete_vectorlERN_modulegR(void *p);
   static void deleteArray_vectorlERN_modulegR(void *p);
   static void destruct_vectorlERN_modulegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RN_module>*)
   {
      vector<RN_module> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RN_module>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RN_module>", -2, "/home/jojima/.root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RN_module>), DefineBehavior(ptr, ptr),
                  0, &vectorlERN_modulegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RN_module>) );
      instance.SetNew(&new_vectorlERN_modulegR);
      instance.SetNewArray(&newArray_vectorlERN_modulegR);
      instance.SetDelete(&delete_vectorlERN_modulegR);
      instance.SetDeleteArray(&deleteArray_vectorlERN_modulegR);
      instance.SetDestructor(&destruct_vectorlERN_modulegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RN_module> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RN_module>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERN_modulegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RN_module>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERN_modulegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RN_module> : new vector<RN_module>;
   }
   static void *newArray_vectorlERN_modulegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RN_module>[nElements] : new vector<RN_module>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERN_modulegR(void *p) {
      delete ((vector<RN_module>*)p);
   }
   static void deleteArray_vectorlERN_modulegR(void *p) {
      delete [] ((vector<RN_module>*)p);
   }
   static void destruct_vectorlERN_modulegR(void *p) {
      typedef vector<RN_module> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RN_module>

/********************************************************
* RNRootDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRNRootDict();

extern "C" void G__set_cpp_environmentRNRootDict() {
  G__cpp_reset_tagtableRNRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevRNRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* sak */
static int G__RNRootDict_626_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) sak::ReadLine(*(ifstream*) libp->para[0].ref, *(vector<std::string>*) libp->para[1].ref
, *(int*) G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_626_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) sak::string_to_double(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_626_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) sak::string_to_int(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/* RN_module */
static int G__RNRootDict_631_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RN_module* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RN_module[n];
     } else {
       p = new((void*) gvp) RN_module[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RN_module;
     } else {
       p = new((void*) gvp) RN_module;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNRootDictLN_RN_module));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RN_module* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RN_module(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) RN_module(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNRootDictLN_RN_module));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((RN_module*) G__getstructoffset())->Name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RN_module*) G__getstructoffset())->GeoAddress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RN_module*) G__getstructoffset())->NumOfCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RN_module*) G__getstructoffset())->Type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RN_module*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RN_module::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RN_module::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RN_module::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RN_module::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RN_module*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RN_module::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RN_module::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RN_module::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_631_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RN_module::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RNRootDict_631_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RN_module* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RN_module(*(RN_module*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNRootDictLN_RN_module));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RN_module G__TRN_module;
static int G__RNRootDict_631_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RN_module*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RN_module*) (soff+(sizeof(RN_module)*i)))->~G__TRN_module();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RN_module*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RN_module*) (soff))->~G__TRN_module();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RNRootDict_631_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RN_module* dest = (RN_module*) G__getstructoffset();
   *dest = *(RN_module*) libp->para[0].ref;
   const RN_module& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RNUnpack2Root */
static int G__RNRootDict_632_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RNUnpack2Root* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RNUnpack2Root[n];
     } else {
       p = new((void*) gvp) RNUnpack2Root[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RNUnpack2Root;
     } else {
       p = new((void*) gvp) RNUnpack2Root;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNRootDictLN_RNUnpack2Root));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_632_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RNUnpack2Root*) G__getstructoffset())->Convert(*(vector<int>*) libp->para[0].ref, *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_632_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RNUnpack2Root*) G__getstructoffset())->init(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_632_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RNUnpack2Root*) G__getstructoffset())->GetMesyNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_632_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RNUnpack2Root*) G__getstructoffset())->GetCaenNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_632_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RNUnpack2Root*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RNRootDict_632_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RNUnpack2Root* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RNUnpack2Root(*(RNUnpack2Root*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNRootDictLN_RNUnpack2Root));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RNUnpack2Root G__TRNUnpack2Root;
static int G__RNRootDict_632_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RNUnpack2Root*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RNUnpack2Root*) (soff+(sizeof(RNUnpack2Root)*i)))->~G__TRNUnpack2Root();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RNUnpack2Root*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RNUnpack2Root*) (soff))->~G__TRNUnpack2Root();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RNRootDict_632_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RNUnpack2Root* dest = (RNUnpack2Root*) G__getstructoffset();
   *dest = *(RNUnpack2Root*) libp->para[0].ref;
   const RNUnpack2Root& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RN_module,allocator<RN_module> > */
static int G__RNRootDict_634_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RN_module,allocator<RN_module> >::reference obj = ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->at((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RN_module,allocator<RN_module> >::const_reference obj = ((const vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->at((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RN_module,allocator<RN_module> >::iterator* pobj;
         vector<RN_module,allocator<RN_module> >::iterator xobj = ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->begin();
         pobj = new vector<RN_module,allocator<RN_module> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RN_module,allocator<RN_module> >::iterator* pobj;
         vector<RN_module,allocator<RN_module> >::iterator xobj = ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->end();
         pobj = new vector<RN_module,allocator<RN_module> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RN_module,allocator<RN_module> >::reverse_iterator* pobj;
         vector<RN_module,allocator<RN_module> >::reverse_iterator xobj = ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RN_module,allocator<RN_module> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RN_module,allocator<RN_module> >::reverse_iterator* pobj;
         vector<RN_module,allocator<RN_module> >::reverse_iterator xobj = ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->rend();
         pobj = new vector<RN_module,allocator<RN_module> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->resize((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->resize((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]), *((RN_module*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RN_module,allocator<RN_module> >::reference obj = ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->operator[]((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RN_module,allocator<RN_module> >::const_reference obj = ((const vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->operator[]((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RN_module,allocator<RN_module> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RN_module,allocator<RN_module> >[n];
     } else {
       p = new((void*) gvp) vector<RN_module,allocator<RN_module> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RN_module,allocator<RN_module> >;
     } else {
       p = new((void*) gvp) vector<RN_module,allocator<RN_module> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RN_module,allocator<RN_module> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RN_module,allocator<RN_module> >((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]), *(RN_module*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RN_module,allocator<RN_module> >((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]), *(RN_module*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RN_module,allocator<RN_module> >((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RN_module,allocator<RN_module> >((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RN_module,allocator<RN_module> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RN_module,allocator<RN_module> >(*(vector<RN_module,allocator<RN_module> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RN_module,allocator<RN_module> >(*(vector<RN_module,allocator<RN_module> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RN_module,allocator<RN_module> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RN_module,allocator<RN_module> >(*((vector<RN_module,allocator<RN_module> >::const_iterator*) G__int(libp->para[0])), *((vector<RN_module,allocator<RN_module> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RN_module,allocator<RN_module> >(*((vector<RN_module,allocator<RN_module> >::const_iterator*) G__int(libp->para[0])), *((vector<RN_module,allocator<RN_module> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RN_module,allocator<RN_module> >& obj = ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->operator=(*(vector<RN_module,allocator<RN_module> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->reserve((vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RN_module& obj = ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RN_module& obj = ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->push_back(*(RN_module*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->swap(*(vector<RN_module,allocator<RN_module> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RN_module,allocator<RN_module> >::iterator* pobj;
         vector<RN_module,allocator<RN_module> >::iterator xobj = ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->insert(*((vector<RN_module,allocator<RN_module> >::iterator*) G__int(libp->para[0])), *(RN_module*) libp->para[1].ref);
         pobj = new vector<RN_module,allocator<RN_module> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->insert(*((vector<RN_module,allocator<RN_module> >::iterator*) G__int(libp->para[0])), *((vector<RN_module,allocator<RN_module> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RN_module,allocator<RN_module> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->insert(*((vector<RN_module,allocator<RN_module> >::iterator*) G__int(libp->para[0])), (vector<RN_module,allocator<RN_module> >::size_type) G__int(libp->para[1])
, *(RN_module*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->erase(*((vector<RN_module,allocator<RN_module> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->erase(*((vector<RN_module,allocator<RN_module> >::iterator*) G__int(libp->para[0])), *((vector<RN_module,allocator<RN_module> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNRootDict_634_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RN_module,allocator<RN_module> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RN_module,allocator<RN_module> > G__TvectorlERN_modulecOallocatorlERN_modulegRsPgR;
static int G__RNRootDict_634_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RN_module,allocator<RN_module> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RN_module,allocator<RN_module> >*) (soff+(sizeof(vector<RN_module,allocator<RN_module> >)*i)))->~G__TvectorlERN_modulecOallocatorlERN_modulegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RN_module,allocator<RN_module> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RN_module,allocator<RN_module> >*) (soff))->~G__TvectorlERN_modulecOallocatorlERN_modulegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* sak */

/* RN_module */

/* RNUnpack2Root */

/* vector<RN_module,allocator<RN_module> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRNRootDict {
 public:
  G__Sizep2memfuncRNRootDict(): p(&G__Sizep2memfuncRNRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRNRootDict::*p)();
};

size_t G__get_sizep2memfuncRNRootDict()
{
  G__Sizep2memfuncRNRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRNRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RNRootDictLN_RN_module))) {
     RN_module *G__Lderived;
     G__Lderived=(RN_module*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RNRootDictLN_RN_module),G__get_linked_tagnum(&G__RNRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRNRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__RNRootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__RNRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__RNRootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__RNRootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RNRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RNRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RNRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RNRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RNRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__RNRootDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__RNRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RNRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RNRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__RNRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RN_module>",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RNRootDictLN_RN_module),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RNRootDictLN_RN_module),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RNRootDictLN_RN_module),256,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RNRootDictLN_RN_module),1,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RNRootDictLN_RN_module),257,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* sak */
static void G__setup_memvarsak(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RNRootDictLN_sak));
   {
   }
   G__tag_memvar_reset();
}


   /* RN_module */
static void G__setup_memvarRN_module(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RNRootDictLN_RN_module));
   { RN_module *p; p=(RN_module*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGeoAddress=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumOfCh=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RNRootDictLN_string),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCh)-(long)(p)),83,0,0,-1,G__defined_typename("Short_t"),-1,1,"fCh=",0,"[fNumOfCh]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RNRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RNUnpack2Root */
static void G__setup_memvarRNUnpack2Root(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RNRootDictLN_RNUnpack2Root));
   { RNUnpack2Root *p; p=(RNUnpack2Root*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mesy_num=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"caen_num=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"adc_counter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mes_counter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->caen_stack)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR),G__defined_typename("vector<RN_module>"),-1,1,"caen_stack=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mesy_stack)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR),G__defined_typename("vector<RN_module>"),-1,1,"mesy_stack=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<RN_module,allocator<RN_module> > */
static void G__setup_memvarvectorlERN_modulecOallocatorlERN_modulegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   { vector<RN_module,allocator<RN_module> > *p; p=(vector<RN_module,allocator<RN_module> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRNRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncsak(void) {
   /* sak */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RNRootDictLN_sak));
   G__memfunc_setup("ReadLine",772,G__RNRootDict_626_0_1, 67, -1, -1, 0, 3, 1, 1, 1, 
"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - a u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - b "
"i - - 11 - ent", (char*)NULL, (void*) G__func2void( (const char* (*)(ifstream&, vector<std::string>&, const int&))(&sak::ReadLine) ), 0);
   G__memfunc_setup("string_to_double",1715,G__RNRootDict_626_0_2, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - s", (char*)NULL, (void*) G__func2void( (double (*)(const string&))(&sak::string_to_double) ), 0);
   G__memfunc_setup("string_to_int",1411,G__RNRootDict_626_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - s", (char*)NULL, (void*) G__func2void( (int (*)(const string&))(&sak::string_to_int) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRN_module(void) {
   /* RN_module */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RNRootDictLN_RN_module));
   G__memfunc_setup("RN_module",901,G__RNRootDict_631_0_1, 105, G__get_linked_tagnum(&G__RNRootDictLN_RN_module), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RN_module",901,G__RNRootDict_631_0_2, 105, G__get_linked_tagnum(&G__RNRootDictLN_RN_module), -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - name i - - 0 - geo "
"i - - 0 - num i - - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Name",385,G__RNRootDict_631_0_3, 117, G__get_linked_tagnum(&G__RNRootDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeoAddress",993,G__RNRootDict_631_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumOfCh",656,G__RNRootDict_631_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Type",418,G__RNRootDict_631_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__RNRootDict_631_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RNRootDict_631_0_8, 85, G__get_linked_tagnum(&G__RNRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RN_module::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RNRootDict_631_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RN_module::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RNRootDict_631_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RN_module::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RNRootDict_631_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RN_module::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RNRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RNRootDict_631_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RNRootDict_631_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RN_module::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RNRootDict_631_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RN_module::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RNRootDict_631_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RN_module::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RNRootDict_631_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RN_module::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RN_module", 901, G__RNRootDict_631_0_20, (int) ('i'), G__get_linked_tagnum(&G__RNRootDictLN_RN_module), -1, 0, 1, 1, 1, 0, "u 'RN_module' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RN_module", 1027, G__RNRootDict_631_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RNRootDict_631_0_22, (int) ('u'), G__get_linked_tagnum(&G__RNRootDictLN_RN_module), -1, 1, 1, 1, 1, 0, "u 'RN_module' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRNUnpack2Root(void) {
   /* RNUnpack2Root */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RNRootDictLN_RNUnpack2Root));
   G__memfunc_setup("RNUnpack2Root",1240,G__RNRootDict_632_0_1, 105, G__get_linked_tagnum(&G__RNRootDictLN_RNUnpack2Root), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert",737,G__RNRootDict_632_0_2, 105, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - run_number u 'string' - 0 - data_dir "
"u 'string' - 0 - output_file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__RNRootDict_632_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMesyNum",1006,G__RNRootDict_632_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCaenNum",967,G__RNRootDict_632_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__RNRootDict_632_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("RNUnpack2Root", 1240, G__RNRootDict_632_0_7, (int) ('i'), G__get_linked_tagnum(&G__RNRootDictLN_RNUnpack2Root), -1, 0, 1, 1, 1, 0, "u 'RNUnpack2Root' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RNUnpack2Root", 1366, G__RNRootDict_632_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RNRootDict_632_0_9, (int) ('u'), G__get_linked_tagnum(&G__RNRootDictLN_RNUnpack2Root), -1, 1, 1, 1, 1, 0, "u 'RNUnpack2Root' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERN_modulecOallocatorlERN_modulegRsPgR(void) {
   /* vector<RN_module,allocator<RN_module> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR));
   G__memfunc_setup("at",213,G__RNRootDict_634_0_1, 117, G__get_linked_tagnum(&G__RNRootDictLN_RN_module), G__defined_typename("vector<RN_module,allocator<RN_module> >::reference"), 1, 1, 1, 1, 0, "h - 'vector<RN_module,allocator<RN_module> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RNRootDict_634_0_2, 117, G__get_linked_tagnum(&G__RNRootDictLN_RN_module), G__defined_typename("vector<RN_module,allocator<RN_module> >::const_reference"), 1, 1, 1, 1, 8, "h - 'vector<RN_module,allocator<RN_module> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RNRootDict_634_0_3, 117, G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RNRootDict_634_0_4, 117, G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RNRootDict_634_0_5, 117, G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiteratorgR), G__defined_typename("vector<RN_module,allocator<RN_module> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RNRootDict_634_0_6, 117, G__get_linked_tagnum(&G__RNRootDictLN_reverse_iteratorlEvectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiteratorgR), G__defined_typename("vector<RN_module,allocator<RN_module> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RNRootDict_634_0_7, 104, -1, G__defined_typename("vector<RN_module,allocator<RN_module> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RNRootDict_634_0_8, 104, -1, G__defined_typename("vector<RN_module,allocator<RN_module> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RNRootDict_634_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<RN_module,allocator<RN_module> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RNRootDict_634_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<RN_module,allocator<RN_module> >::size_type' 0 - sz u 'RN_module' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RNRootDict_634_0_11, 104, -1, G__defined_typename("vector<RN_module,allocator<RN_module> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RNRootDict_634_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RNRootDict_634_0_13, 117, G__get_linked_tagnum(&G__RNRootDictLN_RN_module), G__defined_typename("vector<RN_module,allocator<RN_module> >::reference"), 1, 1, 1, 1, 0, "h - 'vector<RN_module,allocator<RN_module> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RNRootDict_634_0_14, 117, G__get_linked_tagnum(&G__RNRootDictLN_RN_module), G__defined_typename("vector<RN_module,allocator<RN_module> >::const_reference"), 1, 1, 1, 1, 8, "h - 'vector<RN_module,allocator<RN_module> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RN_module,allocator<RN_module> >",3742,G__RNRootDict_634_0_15, 105, G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RN_module,allocator<RN_module> >",3742,G__RNRootDict_634_0_16, 105, G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<RN_module,allocator<RN_module> >::size_type' 0 - n u 'RN_module' - 11 'RN_module()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RN_module,allocator<RN_module> >",3742,G__RNRootDict_634_0_17, 105, G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RN_module,allocator<RN_module> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RN_module,allocator<RN_module> >",3742,G__RNRootDict_634_0_18, 105, G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RN_module,allocator<RN_module> >::iterator' 'vector<RN_module,allocator<RN_module> >::const_iterator' 10 - first u 'vector<RN_module,allocator<RN_module> >::iterator' 'vector<RN_module,allocator<RN_module> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RNRootDict_634_0_19, 117, G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RN_module,allocator<RN_module> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RNRootDict_634_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<RN_module,allocator<RN_module> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RNRootDict_634_0_21, 117, G__get_linked_tagnum(&G__RNRootDictLN_RN_module), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RNRootDict_634_0_22, 117, G__get_linked_tagnum(&G__RNRootDictLN_RN_module), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RNRootDict_634_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RN_module' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RNRootDict_634_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RN_module,allocator<RN_module> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RNRootDict_634_0_25, 117, G__get_linked_tagnum(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RN_module,allocator<RN_module> >::iterator' - 0 - position u 'RN_module' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RNRootDict_634_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RN_module,allocator<RN_module> >::iterator' - 0 - position u 'vector<RN_module,allocator<RN_module> >::iterator' 'vector<RN_module,allocator<RN_module> >::const_iterator' 10 - first "
"u 'vector<RN_module,allocator<RN_module> >::iterator' 'vector<RN_module,allocator<RN_module> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RNRootDict_634_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RN_module,allocator<RN_module> >::iterator' - 0 - position h - 'vector<RN_module,allocator<RN_module> >::size_type' 0 - n "
"u 'RN_module' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RNRootDict_634_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RNRootDict_634_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RN_module,allocator<RN_module> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RNRootDict_634_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RN_module,allocator<RN_module> >::iterator' - 0 - first u 'vector<RN_module,allocator<RN_module> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RNRootDict_634_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RN_module,allocator<RN_module> >", 3868, G__RNRootDict_634_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRNRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRNRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRNRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RNRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RNRootDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__RNRootDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_sak = { "sak" , 110 , -1 };
G__linked_taginfo G__RNRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_RN_module = { "RN_module" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_RNUnpack2Root = { "RNUnpack2Root" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR = { "vector<RN_module,allocator<RN_module> >" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiterator = { "vector<RN_module,allocator<RN_module> >::iterator" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_reverse_iteratorlEvectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RN_module,allocator<RN_module> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__RNRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRNRootDict() {
  G__RNRootDictLN_TClass.tagnum = -1 ;
  G__RNRootDictLN_TBuffer.tagnum = -1 ;
  G__RNRootDictLN_TMemberInspector.tagnum = -1 ;
  G__RNRootDictLN_TObject.tagnum = -1 ;
  G__RNRootDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__RNRootDictLN_string.tagnum = -1 ;
  G__RNRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RNRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RNRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RNRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RNRootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__RNRootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__RNRootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__RNRootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__RNRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RNRootDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__RNRootDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__RNRootDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RNRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__RNRootDictLN_sak.tagnum = -1 ;
  G__RNRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__RNRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RNRootDictLN_RN_module.tagnum = -1 ;
  G__RNRootDictLN_RNUnpack2Root.tagnum = -1 ;
  G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR.tagnum = -1 ;
  G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiterator.tagnum = -1 ;
  G__RNRootDictLN_reverse_iteratorlEvectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RNRootDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__RNRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRNRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_string);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RNRootDictLN_sak),0,-1,262144,(char*)NULL,G__setup_memvarsak,G__setup_memfuncsak);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RNRootDictLN_RN_module),sizeof(RN_module),-1,324864,(char*)NULL,G__setup_memvarRN_module,G__setup_memfuncRN_module);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RNRootDictLN_RNUnpack2Root),sizeof(RNUnpack2Root),-1,262400,(char*)NULL,G__setup_memvarRNUnpack2Root,G__setup_memfuncRNUnpack2Root);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgR),sizeof(vector<RN_module,allocator<RN_module> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERN_modulecOallocatorlERN_modulegRsPgR,G__setup_memfuncvectorlERN_modulecOallocatorlERN_modulegRsPgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_vectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_reverse_iteratorlEvectorlERN_modulecOallocatorlERN_modulegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__RNRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupRNRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRNRootDict()");
  G__set_cpp_environmentRNRootDict();
  G__cpp_setup_tagtableRNRootDict();

  G__cpp_setup_inheritanceRNRootDict();

  G__cpp_setup_typetableRNRootDict();

  G__cpp_setup_memvarRNRootDict();

  G__cpp_setup_memfuncRNRootDict();
  G__cpp_setup_globalRNRootDict();
  G__cpp_setup_funcRNRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRNRootDict();
  return;
}
class G__cpp_setup_initRNRootDict {
  public:
    G__cpp_setup_initRNRootDict() { G__add_setup_func("RNRootDict",(G__incsetup)(&G__cpp_setupRNRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRNRootDict() { G__remove_setup_func("RNRootDict"); }
};
G__cpp_setup_initRNRootDict G__cpp_setup_initializerRNRootDict;

