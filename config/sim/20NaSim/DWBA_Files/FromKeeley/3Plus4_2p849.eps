%!PS-Adobe-2.0 EPSF-2.0
%%Title: 3Plus4_2p849.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Jan 28 11:34:59 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (3Plus4_2p849.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (belaja12,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan 28 11:34:59 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
882 280 M
63 0 V
6045 0 R
-63 0 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
882 626 M
31 0 V
6077 0 R
-31 0 V
882 828 M
31 0 V
6077 0 R
-31 0 V
882 971 M
31 0 V
6077 0 R
-31 0 V
882 1082 M
31 0 V
6077 0 R
-31 0 V
882 1173 M
31 0 V
6077 0 R
-31 0 V
882 1250 M
31 0 V
6077 0 R
-31 0 V
882 1317 M
31 0 V
6077 0 R
-31 0 V
882 1375 M
31 0 V
6077 0 R
-31 0 V
882 1428 M
63 0 V
6045 0 R
-63 0 V
stroke
798 1428 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
882 1774 M
31 0 V
6077 0 R
-31 0 V
882 1976 M
31 0 V
6077 0 R
-31 0 V
882 2119 M
31 0 V
6077 0 R
-31 0 V
882 2230 M
31 0 V
6077 0 R
-31 0 V
882 2321 M
31 0 V
6077 0 R
-31 0 V
882 2398 M
31 0 V
6077 0 R
-31 0 V
882 2465 M
31 0 V
6077 0 R
-31 0 V
882 2523 M
31 0 V
6077 0 R
-31 0 V
882 2576 M
63 0 V
6045 0 R
-63 0 V
stroke
798 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
882 2922 M
31 0 V
6077 0 R
-31 0 V
882 3124 M
31 0 V
6077 0 R
-31 0 V
882 3267 M
31 0 V
6077 0 R
-31 0 V
882 3378 M
31 0 V
6077 0 R
-31 0 V
882 3469 M
31 0 V
6077 0 R
-31 0 V
882 3546 M
31 0 V
6077 0 R
-31 0 V
882 3613 M
31 0 V
6077 0 R
-31 0 V
882 3671 M
31 0 V
6077 0 R
-31 0 V
882 3724 M
63 0 V
6045 0 R
-63 0 V
stroke
798 3724 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
882 4070 M
31 0 V
6077 0 R
-31 0 V
882 4272 M
31 0 V
6077 0 R
-31 0 V
882 4415 M
31 0 V
6077 0 R
-31 0 V
882 4526 M
31 0 V
6077 0 R
-31 0 V
882 4617 M
31 0 V
6077 0 R
-31 0 V
882 4694 M
31 0 V
6077 0 R
-31 0 V
882 4761 M
31 0 V
6077 0 R
-31 0 V
882 4819 M
31 0 V
6077 0 R
-31 0 V
882 4872 M
63 0 V
6045 0 R
-63 0 V
stroke
798 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
882 280 M
0 63 V
0 4529 R
0 -63 V
stroke
882 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1561 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1561 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
2239 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2239 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
2918 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2918 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
3597 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3597 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
4275 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4275 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
4954 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4954 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 120)]
] -46.7 MCshow
1.000 UL
LTb
5633 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5633 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 140)]
] -46.7 MCshow
1.000 UL
LTb
6311 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6311 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 160)]
] -46.7 MCshow
1.000 UL
LTb
6990 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6990 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 180)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
882 4872 N
882 280 L
6108 0 V
0 4592 V
-6108 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LTb
6339 4739 M
('dn_2.849.dat' u 1:2) Rshow
LT0
882 4155 Pls
899 4155 Pls
916 4155 Pls
933 4156 Pls
950 4156 Pls
967 4156 Pls
984 4157 Pls
1001 4157 Pls
1018 4157 Pls
1035 4158 Pls
1052 4158 Pls
1069 4159 Pls
1086 4160 Pls
1103 4160 Pls
1120 4161 Pls
1136 4162 Pls
1153 4163 Pls
1170 4163 Pls
1187 4164 Pls
1204 4165 Pls
1221 4166 Pls
1238 4166 Pls
1255 4167 Pls
1272 4168 Pls
1289 4169 Pls
1306 4169 Pls
1323 4170 Pls
1340 4171 Pls
1357 4171 Pls
1374 4172 Pls
1391 4172 Pls
1408 4173 Pls
1425 4173 Pls
1442 4173 Pls
1459 4174 Pls
1476 4174 Pls
1493 4174 Pls
1510 4173 Pls
1527 4173 Pls
1544 4173 Pls
1561 4172 Pls
1578 4172 Pls
1595 4171 Pls
1612 4170 Pls
1629 4169 Pls
1645 4168 Pls
1662 4167 Pls
1679 4165 Pls
1696 4164 Pls
1713 4162 Pls
1730 4160 Pls
1747 4158 Pls
1764 4155 Pls
1781 4153 Pls
1798 4150 Pls
1815 4147 Pls
1832 4144 Pls
1849 4140 Pls
1866 4137 Pls
1883 4133 Pls
1900 4129 Pls
1917 4125 Pls
1934 4120 Pls
1951 4116 Pls
1968 4111 Pls
1985 4105 Pls
2002 4100 Pls
2019 4094 Pls
2036 4088 Pls
2053 4082 Pls
2070 4076 Pls
2087 4069 Pls
2104 4062 Pls
2121 4055 Pls
2138 4047 Pls
2154 4040 Pls
2171 4032 Pls
2188 4023 Pls
2205 4015 Pls
2222 4006 Pls
2239 3997 Pls
2256 3987 Pls
2273 3978 Pls
2290 3967 Pls
2307 3957 Pls
2324 3946 Pls
2341 3935 Pls
2358 3924 Pls
2375 3912 Pls
2392 3900 Pls
2409 3888 Pls
2426 3875 Pls
2443 3862 Pls
2460 3849 Pls
2477 3836 Pls
2494 3822 Pls
2511 3807 Pls
2528 3793 Pls
2545 3778 Pls
2562 3762 Pls
2579 3747 Pls
2596 3731 Pls
2613 3714 Pls
2630 3698 Pls
2647 3680 Pls
2663 3663 Pls
2680 3645 Pls
2697 3627 Pls
2714 3608 Pls
2731 3589 Pls
2748 3570 Pls
2765 3550 Pls
2782 3529 Pls
2799 3509 Pls
2816 3488 Pls
2833 3466 Pls
2850 3444 Pls
2867 3422 Pls
2884 3399 Pls
2901 3376 Pls
2918 3352 Pls
2935 3328 Pls
2952 3304 Pls
2969 3279 Pls
2986 3253 Pls
3003 3227 Pls
3020 3201 Pls
3037 3174 Pls
3054 3147 Pls
3071 3119 Pls
3088 3091 Pls
3105 3062 Pls
3122 3033 Pls
3139 3003 Pls
3156 2973 Pls
3172 2942 Pls
3189 2911 Pls
3206 2880 Pls
3223 2848 Pls
3240 2816 Pls
3257 2783 Pls
3274 2750 Pls
3291 2717 Pls
3308 2684 Pls
3325 2650 Pls
3342 2617 Pls
3359 2583 Pls
3376 2549 Pls
3393 2516 Pls
3410 2482 Pls
3427 2449 Pls
3444 2417 Pls
3461 2385 Pls
3478 2354 Pls
3495 2324 Pls
3512 2295 Pls
3529 2267 Pls
3546 2241 Pls
3563 2217 Pls
3580 2194 Pls
3597 2173 Pls
3614 2155 Pls
3631 2138 Pls
3648 2124 Pls
3665 2113 Pls
3681 2103 Pls
3698 2096 Pls
3715 2091 Pls
3732 2089 Pls
3749 2088 Pls
3766 2089 Pls
3783 2092 Pls
3800 2096 Pls
3817 2102 Pls
3834 2109 Pls
3851 2117 Pls
3868 2126 Pls
3885 2135 Pls
3902 2145 Pls
3919 2155 Pls
3936 2166 Pls
3953 2177 Pls
3970 2187 Pls
3987 2198 Pls
4004 2209 Pls
4021 2219 Pls
4038 2230 Pls
4055 2240 Pls
4072 2250 Pls
4089 2259 Pls
4106 2269 Pls
4123 2278 Pls
4140 2286 Pls
4157 2294 Pls
4174 2302 Pls
4190 2309 Pls
4207 2316 Pls
4224 2323 Pls
4241 2329 Pls
4258 2335 Pls
4275 2340 Pls
4292 2345 Pls
4309 2349 Pls
4326 2353 Pls
4343 2357 Pls
4360 2360 Pls
4377 2363 Pls
4394 2365 Pls
4411 2367 Pls
4428 2369 Pls
4445 2370 Pls
4462 2371 Pls
4479 2372 Pls
4496 2372 Pls
4513 2372 Pls
4530 2371 Pls
4547 2370 Pls
4564 2369 Pls
4581 2368 Pls
4598 2366 Pls
4615 2364 Pls
4632 2361 Pls
4649 2358 Pls
4666 2355 Pls
4683 2352 Pls
4699 2348 Pls
4716 2344 Pls
4733 2339 Pls
4750 2335 Pls
4767 2330 Pls
4784 2324 Pls
4801 2319 Pls
4818 2313 Pls
4835 2307 Pls
4852 2300 Pls
4869 2294 Pls
4886 2287 Pls
4903 2280 Pls
4920 2272 Pls
4937 2264 Pls
4954 2256 Pls
4971 2248 Pls
4988 2240 Pls
5005 2231 Pls
5022 2222 Pls
5039 2212 Pls
5056 2203 Pls
5073 2193 Pls
5090 2183 Pls
5107 2173 Pls
5124 2162 Pls
5141 2152 Pls
5158 2141 Pls
5175 2129 Pls
5192 2118 Pls
5208 2106 Pls
5225 2094 Pls
5242 2082 Pls
5259 2070 Pls
5276 2057 Pls
5293 2044 Pls
5310 2031 Pls
5327 2017 Pls
5344 2004 Pls
5361 1990 Pls
5378 1976 Pls
5395 1961 Pls
5412 1947 Pls
5429 1932 Pls
5446 1917 Pls
5463 1901 Pls
5480 1886 Pls
5497 1870 Pls
5514 1854 Pls
5531 1838 Pls
5548 1821 Pls
5565 1805 Pls
5582 1788 Pls
5599 1771 Pls
5616 1753 Pls
5633 1736 Pls
5650 1718 Pls
5667 1700 Pls
5684 1682 Pls
5701 1664 Pls
5717 1646 Pls
5734 1627 Pls
5751 1608 Pls
5768 1590 Pls
5785 1571 Pls
5802 1552 Pls
5819 1533 Pls
5836 1514 Pls
5853 1496 Pls
5870 1476 Pls
5887 1458 Pls
5904 1439 Pls
5921 1420 Pls
5938 1402 Pls
5955 1384 Pls
5972 1366 Pls
5989 1348 Pls
6006 1331 Pls
6023 1314 Pls
6040 1298 Pls
6057 1282 Pls
6074 1266 Pls
6091 1251 Pls
6108 1237 Pls
6125 1223 Pls
6142 1210 Pls
6159 1198 Pls
6176 1187 Pls
6193 1176 Pls
6210 1166 Pls
6226 1156 Pls
6243 1148 Pls
6260 1140 Pls
6277 1134 Pls
6294 1128 Pls
6311 1123 Pls
6328 1118 Pls
6345 1114 Pls
6362 1112 Pls
6379 1109 Pls
6396 1108 Pls
6413 1107 Pls
6430 1107 Pls
6447 1107 Pls
6464 1107 Pls
6481 1109 Pls
6498 1110 Pls
6515 1112 Pls
6532 1114 Pls
6549 1117 Pls
6566 1119 Pls
6583 1122 Pls
6600 1126 Pls
6617 1129 Pls
6634 1132 Pls
6651 1135 Pls
6668 1139 Pls
6685 1142 Pls
6702 1145 Pls
6719 1149 Pls
6735 1152 Pls
6752 1155 Pls
6769 1158 Pls
6786 1160 Pls
6803 1163 Pls
6820 1165 Pls
6837 1168 Pls
6854 1170 Pls
6871 1171 Pls
6888 1173 Pls
6905 1174 Pls
6922 1175 Pls
6939 1176 Pls
6956 1177 Pls
6973 1177 Pls
6990 1178 Pls
6622 4739 Pls
1.000 UL
LTb
882 4872 N
882 280 L
6108 0 V
0 4592 V
-6108 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
