%!PS-Adobe-2.0 EPSF-2.0
%%Title: 3Plus3_2p849_vs_1Plus2_2p849_BothMirror.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Feb  9 10:32:22 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (3Plus3_2p849_vs_1Plus2_2p849_BothMirror.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (belaja12,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Feb  9 10:32:22 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
882 280 M
63 0 V
6045 0 R
-63 0 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
882 510 M
31 0 V
6077 0 R
-31 0 V
882 815 M
31 0 V
6077 0 R
-31 0 V
882 971 M
31 0 V
6077 0 R
-31 0 V
882 1045 M
63 0 V
6045 0 R
-63 0 V
stroke
798 1045 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
882 1276 M
31 0 V
6077 0 R
-31 0 V
882 1580 M
31 0 V
6077 0 R
-31 0 V
882 1736 M
31 0 V
6077 0 R
-31 0 V
882 1811 M
63 0 V
6045 0 R
-63 0 V
stroke
798 1811 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
882 2041 M
31 0 V
6077 0 R
-31 0 V
882 2346 M
31 0 V
6077 0 R
-31 0 V
882 2502 M
31 0 V
6077 0 R
-31 0 V
882 2576 M
63 0 V
6045 0 R
-63 0 V
stroke
798 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
882 2806 M
31 0 V
6077 0 R
-31 0 V
882 3111 M
31 0 V
6077 0 R
-31 0 V
882 3267 M
31 0 V
6077 0 R
-31 0 V
882 3341 M
63 0 V
6045 0 R
-63 0 V
stroke
798 3341 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
882 3572 M
31 0 V
6077 0 R
-31 0 V
882 3876 M
31 0 V
6077 0 R
-31 0 V
882 4032 M
31 0 V
6077 0 R
-31 0 V
882 4107 M
63 0 V
6045 0 R
-63 0 V
stroke
798 4107 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
882 4337 M
31 0 V
6077 0 R
-31 0 V
882 4642 M
31 0 V
6077 0 R
-31 0 V
882 4798 M
31 0 V
6077 0 R
-31 0 V
882 4872 M
63 0 V
6045 0 R
-63 0 V
stroke
798 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
1.000 UL
LTb
882 280 M
0 63 V
0 4529 R
0 -63 V
stroke
882 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1561 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1561 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
2239 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2239 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
2918 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2918 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
3597 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3597 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
4275 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4275 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
4954 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4954 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 120)]
] -46.7 MCshow
1.000 UL
LTb
5633 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5633 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 140)]
] -46.7 MCshow
1.000 UL
LTb
6311 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6311 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 160)]
] -46.7 MCshow
1.000 UL
LTb
6990 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6990 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 180)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
882 4872 N
882 280 L
6108 0 V
0 4592 V
-6108 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (2.849MeV as 3)]
[(Helvetica) 112.0 70.0 true true 0 (+)]
[(Helvetica) 112.0 -42.0 true true 0 (3)]
[(Helvetica) 140.0 0.0 true true 0 ( Mirror)]
] -46.7 MRshow
LT0
882 2919 Pls
899 2919 Pls
916 2919 Pls
933 2919 Pls
950 2919 Pls
967 2919 Pls
984 2919 Pls
1001 2919 Pls
1018 2919 Pls
1035 2919 Pls
1052 2919 Pls
1069 2919 Pls
1086 2920 Pls
1103 2920 Pls
1120 2920 Pls
1136 2920 Pls
1153 2920 Pls
1170 2919 Pls
1187 2919 Pls
1204 2919 Pls
1221 2919 Pls
1238 2919 Pls
1255 2919 Pls
1272 2918 Pls
1289 2918 Pls
1306 2918 Pls
1323 2917 Pls
1340 2916 Pls
1357 2916 Pls
1374 2915 Pls
1391 2914 Pls
1408 2913 Pls
1425 2912 Pls
1442 2911 Pls
1459 2910 Pls
1476 2909 Pls
1493 2907 Pls
1510 2906 Pls
1527 2904 Pls
1544 2902 Pls
1561 2900 Pls
1578 2898 Pls
1595 2896 Pls
1612 2894 Pls
1629 2891 Pls
1645 2889 Pls
1662 2886 Pls
1679 2883 Pls
1696 2880 Pls
1713 2877 Pls
1730 2874 Pls
1747 2870 Pls
1764 2867 Pls
1781 2863 Pls
1798 2859 Pls
1815 2855 Pls
1832 2850 Pls
1849 2846 Pls
1866 2841 Pls
1883 2836 Pls
1900 2831 Pls
1917 2826 Pls
1934 2821 Pls
1951 2815 Pls
1968 2809 Pls
1985 2804 Pls
2002 2797 Pls
2019 2791 Pls
2036 2785 Pls
2053 2778 Pls
2070 2771 Pls
2087 2764 Pls
2104 2757 Pls
2121 2749 Pls
2138 2742 Pls
2154 2734 Pls
2171 2726 Pls
2188 2718 Pls
2205 2709 Pls
2222 2700 Pls
2239 2691 Pls
2256 2682 Pls
2273 2673 Pls
2290 2663 Pls
2307 2654 Pls
2324 2644 Pls
2341 2634 Pls
2358 2623 Pls
2375 2613 Pls
2392 2602 Pls
2409 2591 Pls
2426 2579 Pls
2443 2568 Pls
2460 2556 Pls
2477 2544 Pls
2494 2532 Pls
2511 2520 Pls
2528 2507 Pls
2545 2494 Pls
2562 2481 Pls
2579 2467 Pls
2596 2454 Pls
2613 2440 Pls
2630 2426 Pls
2647 2411 Pls
2663 2396 Pls
2680 2382 Pls
2697 2366 Pls
2714 2351 Pls
2731 2335 Pls
2748 2319 Pls
2765 2303 Pls
2782 2287 Pls
2799 2270 Pls
2816 2253 Pls
2833 2236 Pls
2850 2218 Pls
2867 2201 Pls
2884 2183 Pls
2901 2164 Pls
2918 2146 Pls
2935 2127 Pls
2952 2108 Pls
2969 2088 Pls
2986 2069 Pls
3003 2049 Pls
3020 2029 Pls
3037 2009 Pls
3054 1988 Pls
3071 1967 Pls
3088 1946 Pls
3105 1925 Pls
3122 1904 Pls
3139 1882 Pls
3156 1861 Pls
3172 1839 Pls
3189 1817 Pls
3206 1795 Pls
3223 1773 Pls
3240 1751 Pls
3257 1729 Pls
3274 1707 Pls
3291 1686 Pls
3308 1664 Pls
3325 1643 Pls
3342 1622 Pls
3359 1602 Pls
3376 1582 Pls
3393 1563 Pls
3410 1544 Pls
3427 1526 Pls
3444 1509 Pls
3461 1493 Pls
3478 1478 Pls
3495 1464 Pls
3512 1451 Pls
3529 1440 Pls
3546 1429 Pls
3563 1420 Pls
3580 1411 Pls
3597 1404 Pls
3614 1398 Pls
3631 1394 Pls
3648 1390 Pls
3665 1387 Pls
3681 1385 Pls
3698 1384 Pls
3715 1384 Pls
3732 1385 Pls
3749 1386 Pls
3766 1387 Pls
3783 1389 Pls
3800 1392 Pls
3817 1394 Pls
3834 1397 Pls
3851 1401 Pls
3868 1404 Pls
3885 1407 Pls
3902 1411 Pls
3919 1414 Pls
3936 1417 Pls
3953 1421 Pls
3970 1424 Pls
3987 1427 Pls
4004 1430 Pls
4021 1432 Pls
4038 1435 Pls
4055 1437 Pls
4072 1440 Pls
4089 1442 Pls
4106 1443 Pls
4123 1445 Pls
4140 1446 Pls
4157 1448 Pls
4174 1448 Pls
4190 1449 Pls
4207 1450 Pls
4224 1450 Pls
4241 1450 Pls
4258 1450 Pls
4275 1449 Pls
4292 1449 Pls
4309 1448 Pls
4326 1447 Pls
4343 1446 Pls
4360 1444 Pls
4377 1442 Pls
4394 1440 Pls
4411 1438 Pls
4428 1436 Pls
4445 1433 Pls
4462 1431 Pls
4479 1428 Pls
4496 1425 Pls
4513 1421 Pls
4530 1418 Pls
4547 1414 Pls
4564 1410 Pls
4581 1406 Pls
4598 1402 Pls
4615 1398 Pls
4632 1393 Pls
4649 1388 Pls
4666 1383 Pls
4683 1378 Pls
4699 1373 Pls
4716 1368 Pls
4733 1362 Pls
4750 1357 Pls
4767 1351 Pls
4784 1345 Pls
4801 1339 Pls
4818 1332 Pls
4835 1326 Pls
4852 1319 Pls
4869 1313 Pls
4886 1306 Pls
4903 1299 Pls
4920 1292 Pls
4937 1285 Pls
4954 1278 Pls
4971 1271 Pls
4988 1263 Pls
5005 1256 Pls
5022 1248 Pls
5039 1240 Pls
5056 1232 Pls
5073 1224 Pls
5090 1216 Pls
5107 1208 Pls
5124 1200 Pls
5141 1192 Pls
5158 1184 Pls
5175 1175 Pls
5192 1167 Pls
5208 1159 Pls
5225 1150 Pls
5242 1141 Pls
5259 1133 Pls
5276 1124 Pls
5293 1115 Pls
5310 1107 Pls
5327 1098 Pls
5344 1089 Pls
5361 1080 Pls
5378 1071 Pls
5395 1062 Pls
5412 1053 Pls
5429 1044 Pls
5446 1035 Pls
5463 1026 Pls
5480 1017 Pls
5497 1008 Pls
5514 999 Pls
5531 990 Pls
5548 980 Pls
5565 971 Pls
5582 962 Pls
5599 953 Pls
5616 944 Pls
5633 934 Pls
5650 925 Pls
5667 916 Pls
5684 907 Pls
5701 897 Pls
5717 888 Pls
5734 879 Pls
5751 870 Pls
5768 860 Pls
5785 851 Pls
5802 842 Pls
5819 833 Pls
5836 824 Pls
5853 815 Pls
5870 806 Pls
5887 797 Pls
5904 788 Pls
5921 779 Pls
5938 770 Pls
5955 762 Pls
5972 753 Pls
5989 744 Pls
6006 736 Pls
6023 728 Pls
6040 720 Pls
6057 711 Pls
6074 703 Pls
6091 695 Pls
6108 688 Pls
6125 680 Pls
6142 673 Pls
6159 665 Pls
6176 658 Pls
6193 651 Pls
6210 644 Pls
6226 637 Pls
6243 631 Pls
6260 624 Pls
6277 618 Pls
6294 612 Pls
6311 606 Pls
6328 600 Pls
6345 594 Pls
6362 589 Pls
6379 583 Pls
6396 578 Pls
6413 573 Pls
6430 568 Pls
6447 563 Pls
6464 559 Pls
6481 554 Pls
6498 550 Pls
6515 546 Pls
6532 542 Pls
6549 538 Pls
6566 534 Pls
6583 530 Pls
6600 527 Pls
6617 524 Pls
6634 520 Pls
6651 517 Pls
6668 514 Pls
6685 512 Pls
6702 509 Pls
6719 507 Pls
6735 504 Pls
6752 502 Pls
6769 500 Pls
6786 498 Pls
6803 496 Pls
6820 495 Pls
6837 493 Pls
6854 492 Pls
6871 491 Pls
6888 489 Pls
6905 489 Pls
6922 488 Pls
6939 487 Pls
6956 487 Pls
6973 487 Pls
6990 487 Pls
6622 4739 Pls
1.000 UP
1.000 UL
LT1
LTb
6339 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (2.849MeV as 1)]
[(Helvetica) 112.0 70.0 true true 0 (+)]
[(Helvetica) 112.0 -42.0 true true 0 (2)]
[(Helvetica) 140.0 0.0 true true 0 ( Mirror)]
] -46.7 MRshow
LT1
882 4256 Crs
899 4255 Crs
916 4254 Crs
933 4253 Crs
950 4251 Crs
967 4249 Crs
984 4246 Crs
1001 4243 Crs
1018 4239 Crs
1035 4234 Crs
1052 4230 Crs
1069 4224 Crs
1086 4218 Crs
1103 4212 Crs
1120 4205 Crs
1136 4198 Crs
1153 4190 Crs
1170 4181 Crs
1187 4172 Crs
1204 4163 Crs
1221 4153 Crs
1238 4143 Crs
1255 4132 Crs
1272 4121 Crs
1289 4109 Crs
1306 4097 Crs
1323 4085 Crs
1340 4072 Crs
1357 4058 Crs
1374 4045 Crs
1391 4031 Crs
1408 4016 Crs
1425 4001 Crs
1442 3986 Crs
1459 3970 Crs
1476 3955 Crs
1493 3938 Crs
1510 3922 Crs
1527 3905 Crs
1544 3888 Crs
1561 3871 Crs
1578 3854 Crs
1595 3836 Crs
1612 3819 Crs
1629 3801 Crs
1645 3783 Crs
1662 3765 Crs
1679 3747 Crs
1696 3729 Crs
1713 3711 Crs
1730 3693 Crs
1747 3676 Crs
1764 3658 Crs
1781 3641 Crs
1798 3624 Crs
1815 3607 Crs
1832 3591 Crs
1849 3574 Crs
1866 3559 Crs
1883 3543 Crs
1900 3528 Crs
1917 3514 Crs
1934 3500 Crs
1951 3486 Crs
1968 3473 Crs
1985 3460 Crs
2002 3448 Crs
2019 3436 Crs
2036 3425 Crs
2053 3414 Crs
2070 3404 Crs
2087 3395 Crs
2104 3385 Crs
2121 3376 Crs
2138 3368 Crs
2154 3359 Crs
2171 3351 Crs
2188 3344 Crs
2205 3336 Crs
2222 3329 Crs
2239 3322 Crs
2256 3315 Crs
2273 3309 Crs
2290 3302 Crs
2307 3296 Crs
2324 3289 Crs
2341 3283 Crs
2358 3276 Crs
2375 3270 Crs
2392 3263 Crs
2409 3257 Crs
2426 3250 Crs
2443 3244 Crs
2460 3237 Crs
2477 3230 Crs
2494 3223 Crs
2511 3216 Crs
2528 3209 Crs
2545 3202 Crs
2562 3194 Crs
2579 3186 Crs
2596 3179 Crs
2613 3171 Crs
2630 3163 Crs
2647 3154 Crs
2663 3146 Crs
2680 3138 Crs
2697 3129 Crs
2714 3120 Crs
2731 3111 Crs
2748 3103 Crs
2765 3093 Crs
2782 3084 Crs
2799 3075 Crs
2816 3065 Crs
2833 3056 Crs
2850 3046 Crs
2867 3037 Crs
2884 3027 Crs
2901 3017 Crs
2918 3007 Crs
2935 2997 Crs
2952 2987 Crs
2969 2977 Crs
2986 2967 Crs
3003 2957 Crs
3020 2947 Crs
3037 2937 Crs
3054 2927 Crs
3071 2917 Crs
3088 2907 Crs
3105 2897 Crs
3122 2887 Crs
3139 2877 Crs
3156 2868 Crs
3172 2858 Crs
3189 2848 Crs
3206 2838 Crs
3223 2829 Crs
3240 2819 Crs
3257 2810 Crs
3274 2800 Crs
3291 2791 Crs
3308 2781 Crs
3325 2772 Crs
3342 2763 Crs
3359 2753 Crs
3376 2744 Crs
3393 2735 Crs
3410 2726 Crs
3427 2717 Crs
3444 2708 Crs
3461 2699 Crs
3478 2690 Crs
3495 2681 Crs
3512 2672 Crs
3529 2663 Crs
3546 2654 Crs
3563 2645 Crs
3580 2636 Crs
3597 2627 Crs
3614 2618 Crs
3631 2609 Crs
3648 2599 Crs
3665 2590 Crs
3681 2581 Crs
3698 2571 Crs
3715 2562 Crs
3732 2552 Crs
3749 2543 Crs
3766 2533 Crs
3783 2523 Crs
3800 2513 Crs
3817 2502 Crs
3834 2492 Crs
3851 2481 Crs
3868 2470 Crs
3885 2459 Crs
3902 2448 Crs
3919 2437 Crs
3936 2425 Crs
3953 2414 Crs
3970 2402 Crs
3987 2390 Crs
4004 2377 Crs
4021 2365 Crs
4038 2352 Crs
4055 2339 Crs
4072 2326 Crs
4089 2312 Crs
4106 2298 Crs
4123 2284 Crs
4140 2270 Crs
4157 2256 Crs
4174 2241 Crs
4190 2226 Crs
4207 2211 Crs
4224 2196 Crs
4241 2180 Crs
4258 2165 Crs
4275 2149 Crs
4292 2133 Crs
4309 2116 Crs
4326 2100 Crs
4343 2083 Crs
4360 2067 Crs
4377 2050 Crs
4394 2033 Crs
4411 2016 Crs
4428 2000 Crs
4445 1983 Crs
4462 1967 Crs
4479 1950 Crs
4496 1934 Crs
4513 1918 Crs
4530 1903 Crs
4547 1888 Crs
4564 1874 Crs
4581 1860 Crs
4598 1847 Crs
4615 1835 Crs
4632 1823 Crs
4649 1813 Crs
4666 1803 Crs
4683 1795 Crs
4699 1787 Crs
4716 1781 Crs
4733 1776 Crs
4750 1772 Crs
4767 1769 Crs
4784 1768 Crs
4801 1768 Crs
4818 1768 Crs
4835 1770 Crs
4852 1773 Crs
4869 1777 Crs
4886 1781 Crs
4903 1786 Crs
4920 1792 Crs
4937 1799 Crs
4954 1806 Crs
4971 1814 Crs
4988 1821 Crs
5005 1830 Crs
5022 1838 Crs
5039 1847 Crs
5056 1856 Crs
5073 1865 Crs
5090 1874 Crs
5107 1883 Crs
5124 1892 Crs
5141 1901 Crs
5158 1910 Crs
5175 1918 Crs
5192 1927 Crs
5208 1936 Crs
5225 1944 Crs
5242 1952 Crs
5259 1961 Crs
5276 1969 Crs
5293 1976 Crs
5310 1984 Crs
5327 1991 Crs
5344 1999 Crs
5361 2006 Crs
5378 2013 Crs
5395 2019 Crs
5412 2026 Crs
5429 2032 Crs
5446 2039 Crs
5463 2045 Crs
5480 2051 Crs
5497 2056 Crs
5514 2062 Crs
5531 2067 Crs
5548 2072 Crs
5565 2078 Crs
5582 2083 Crs
5599 2087 Crs
5616 2092 Crs
5633 2097 Crs
5650 2101 Crs
5667 2106 Crs
5684 2110 Crs
5701 2114 Crs
5717 2118 Crs
5734 2122 Crs
5751 2126 Crs
5768 2129 Crs
5785 2133 Crs
5802 2137 Crs
5819 2140 Crs
5836 2144 Crs
5853 2147 Crs
5870 2150 Crs
5887 2153 Crs
5904 2156 Crs
5921 2159 Crs
5938 2162 Crs
5955 2165 Crs
5972 2168 Crs
5989 2171 Crs
6006 2173 Crs
6023 2176 Crs
6040 2179 Crs
6057 2181 Crs
6074 2184 Crs
6091 2186 Crs
6108 2189 Crs
6125 2191 Crs
6142 2193 Crs
6159 2196 Crs
6176 2198 Crs
6193 2200 Crs
6210 2202 Crs
6226 2204 Crs
6243 2206 Crs
6260 2208 Crs
6277 2210 Crs
6294 2212 Crs
6311 2214 Crs
6328 2216 Crs
6345 2218 Crs
6362 2219 Crs
6379 2221 Crs
6396 2223 Crs
6413 2225 Crs
6430 2226 Crs
6447 2228 Crs
6464 2229 Crs
6481 2231 Crs
6498 2232 Crs
6515 2234 Crs
6532 2235 Crs
6549 2236 Crs
6566 2238 Crs
6583 2239 Crs
6600 2240 Crs
6617 2241 Crs
6634 2242 Crs
6651 2243 Crs
6668 2244 Crs
6685 2245 Crs
6702 2246 Crs
6719 2247 Crs
6735 2248 Crs
6752 2249 Crs
6769 2249 Crs
6786 2250 Crs
6803 2251 Crs
6820 2251 Crs
6837 2252 Crs
6854 2252 Crs
6871 2253 Crs
6888 2253 Crs
6905 2253 Crs
6922 2254 Crs
6939 2254 Crs
6956 2254 Crs
6973 2254 Crs
6990 2254 Crs
6622 4599 Crs
1.000 UL
LTb
882 4872 N
882 280 L
6108 0 V
0 4592 V
-6108 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
