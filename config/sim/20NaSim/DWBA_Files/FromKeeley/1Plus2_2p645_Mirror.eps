%!PS-Adobe-2.0 EPSF-2.0
%%Title: 1Plus2_2p645_Mirror.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Jan 28 11:47:51 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (1Plus2_2p645_Mirror.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (belaja12,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan 28 11:47:51 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 280 M
63 0 V
6129 0 R
-63 0 V
stroke
714 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
798 626 M
31 0 V
6161 0 R
-31 0 V
798 828 M
31 0 V
6161 0 R
-31 0 V
798 971 M
31 0 V
6161 0 R
-31 0 V
798 1082 M
31 0 V
6161 0 R
-31 0 V
798 1173 M
31 0 V
6161 0 R
-31 0 V
798 1250 M
31 0 V
6161 0 R
-31 0 V
798 1317 M
31 0 V
6161 0 R
-31 0 V
798 1375 M
31 0 V
6161 0 R
-31 0 V
798 1428 M
63 0 V
6129 0 R
-63 0 V
stroke
714 1428 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
798 1774 M
31 0 V
6161 0 R
-31 0 V
798 1976 M
31 0 V
6161 0 R
-31 0 V
798 2119 M
31 0 V
6161 0 R
-31 0 V
798 2230 M
31 0 V
6161 0 R
-31 0 V
798 2321 M
31 0 V
6161 0 R
-31 0 V
798 2398 M
31 0 V
6161 0 R
-31 0 V
798 2465 M
31 0 V
6161 0 R
-31 0 V
798 2523 M
31 0 V
6161 0 R
-31 0 V
798 2576 M
63 0 V
6129 0 R
-63 0 V
stroke
714 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
798 2922 M
31 0 V
6161 0 R
-31 0 V
798 3124 M
31 0 V
6161 0 R
-31 0 V
798 3267 M
31 0 V
6161 0 R
-31 0 V
798 3378 M
31 0 V
6161 0 R
-31 0 V
798 3469 M
31 0 V
6161 0 R
-31 0 V
798 3546 M
31 0 V
6161 0 R
-31 0 V
798 3613 M
31 0 V
6161 0 R
-31 0 V
798 3671 M
31 0 V
6161 0 R
-31 0 V
798 3724 M
63 0 V
6129 0 R
-63 0 V
stroke
714 3724 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
798 4070 M
31 0 V
6161 0 R
-31 0 V
798 4272 M
31 0 V
6161 0 R
-31 0 V
798 4415 M
31 0 V
6161 0 R
-31 0 V
798 4526 M
31 0 V
6161 0 R
-31 0 V
798 4617 M
31 0 V
6161 0 R
-31 0 V
798 4694 M
31 0 V
6161 0 R
-31 0 V
798 4761 M
31 0 V
6161 0 R
-31 0 V
798 4819 M
31 0 V
6161 0 R
-31 0 V
798 4872 M
63 0 V
6129 0 R
-63 0 V
stroke
714 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
798 280 M
0 63 V
0 4529 R
0 -63 V
stroke
798 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1486 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1486 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
2174 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2174 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
2862 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2862 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
3550 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3550 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
4238 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4238 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
4926 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4926 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 120)]
] -46.7 MCshow
1.000 UL
LTb
5614 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5614 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 140)]
] -46.7 MCshow
1.000 UL
LTb
6302 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6302 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 160)]
] -46.7 MCshow
1.000 UL
LTb
6990 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6990 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 180)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 4872 N
798 280 L
6192 0 V
0 4592 V
-6192 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (2.645MeV as 1)]
[(Helvetica) 112.0 70.0 true true 0 (+)]
[(Helvetica) 112.0 -42.0 true true 0 (2)]
] -46.7 MRshow
LT0
798 4616 Pls
815 4615 Pls
832 4614 Pls
850 4612 Pls
867 4609 Pls
884 4606 Pls
901 4601 Pls
918 4596 Pls
936 4590 Pls
953 4583 Pls
970 4575 Pls
987 4567 Pls
1004 4558 Pls
1022 4548 Pls
1039 4537 Pls
1056 4525 Pls
1073 4513 Pls
1090 4500 Pls
1108 4486 Pls
1125 4471 Pls
1142 4456 Pls
1159 4440 Pls
1176 4423 Pls
1194 4405 Pls
1211 4387 Pls
1228 4368 Pls
1245 4348 Pls
1262 4328 Pls
1280 4307 Pls
1297 4286 Pls
1314 4264 Pls
1331 4241 Pls
1348 4217 Pls
1366 4194 Pls
1383 4169 Pls
1400 4144 Pls
1417 4119 Pls
1434 4093 Pls
1452 4067 Pls
1469 4040 Pls
1486 4013 Pls
1503 3985 Pls
1520 3958 Pls
1538 3930 Pls
1555 3902 Pls
1572 3874 Pls
1589 3846 Pls
1606 3817 Pls
1624 3789 Pls
1641 3761 Pls
1658 3732 Pls
1675 3704 Pls
1692 3677 Pls
1710 3649 Pls
1727 3622 Pls
1744 3596 Pls
1761 3570 Pls
1778 3544 Pls
1796 3519 Pls
1813 3495 Pls
1830 3471 Pls
1847 3449 Pls
1864 3427 Pls
1882 3405 Pls
1899 3385 Pls
1916 3365 Pls
1933 3347 Pls
1950 3329 Pls
1968 3312 Pls
1985 3295 Pls
2002 3280 Pls
2019 3265 Pls
2036 3251 Pls
2054 3237 Pls
2071 3224 Pls
2088 3212 Pls
2105 3200 Pls
2122 3189 Pls
2140 3178 Pls
2157 3167 Pls
2174 3157 Pls
2191 3147 Pls
2208 3137 Pls
2226 3127 Pls
2243 3118 Pls
2260 3108 Pls
2277 3099 Pls
2294 3089 Pls
2312 3079 Pls
2329 3070 Pls
2346 3060 Pls
2363 3050 Pls
2380 3040 Pls
2398 3030 Pls
2415 3019 Pls
2432 3009 Pls
2449 2998 Pls
2466 2987 Pls
2484 2976 Pls
2501 2964 Pls
2518 2953 Pls
2535 2941 Pls
2552 2929 Pls
2570 2916 Pls
2587 2903 Pls
2604 2890 Pls
2621 2877 Pls
2638 2864 Pls
2656 2851 Pls
2673 2837 Pls
2690 2823 Pls
2707 2809 Pls
2724 2795 Pls
2742 2780 Pls
2759 2765 Pls
2776 2751 Pls
2793 2736 Pls
2810 2721 Pls
2828 2706 Pls
2845 2690 Pls
2862 2675 Pls
2879 2660 Pls
2896 2644 Pls
2914 2629 Pls
2931 2613 Pls
2948 2598 Pls
2965 2583 Pls
2982 2567 Pls
3000 2552 Pls
3017 2536 Pls
3034 2521 Pls
3051 2506 Pls
3068 2491 Pls
3086 2475 Pls
3103 2460 Pls
3120 2445 Pls
3137 2430 Pls
3154 2416 Pls
3172 2401 Pls
3189 2386 Pls
3206 2372 Pls
3223 2358 Pls
3240 2343 Pls
3258 2329 Pls
3275 2315 Pls
3292 2301 Pls
3309 2287 Pls
3326 2274 Pls
3344 2260 Pls
3361 2247 Pls
3378 2233 Pls
3395 2220 Pls
3412 2206 Pls
3430 2193 Pls
3447 2180 Pls
3464 2166 Pls
3481 2153 Pls
3498 2140 Pls
3516 2126 Pls
3533 2113 Pls
3550 2099 Pls
3567 2086 Pls
3584 2072 Pls
3602 2059 Pls
3619 2045 Pls
3636 2031 Pls
3653 2017 Pls
3670 2002 Pls
3688 1988 Pls
3705 1973 Pls
3722 1959 Pls
3739 1944 Pls
3756 1928 Pls
3774 1913 Pls
3791 1897 Pls
3808 1881 Pls
3825 1865 Pls
3842 1848 Pls
3860 1831 Pls
3877 1814 Pls
3894 1797 Pls
3911 1779 Pls
3928 1761 Pls
3946 1742 Pls
3963 1723 Pls
3980 1704 Pls
3997 1684 Pls
4014 1664 Pls
4032 1644 Pls
4049 1623 Pls
4066 1602 Pls
4083 1581 Pls
4100 1558 Pls
4118 1536 Pls
4135 1513 Pls
4152 1490 Pls
4169 1467 Pls
4186 1443 Pls
4204 1419 Pls
4221 1394 Pls
4238 1369 Pls
4255 1344 Pls
4272 1318 Pls
4290 1293 Pls
4307 1267 Pls
4324 1240 Pls
4341 1214 Pls
4358 1188 Pls
4376 1161 Pls
4393 1135 Pls
4410 1108 Pls
4427 1082 Pls
4444 1056 Pls
4462 1031 Pls
4479 1006 Pls
4496 982 Pls
4513 958 Pls
4530 936 Pls
4548 914 Pls
4565 894 Pls
4582 875 Pls
4599 857 Pls
4616 841 Pls
4634 827 Pls
4651 815 Pls
4668 804 Pls
4685 796 Pls
4702 789 Pls
4720 785 Pls
4737 782 Pls
4754 781 Pls
4771 783 Pls
4788 785 Pls
4806 790 Pls
4823 796 Pls
4840 804 Pls
4857 813 Pls
4874 823 Pls
4892 834 Pls
4909 846 Pls
4926 858 Pls
4943 871 Pls
4960 885 Pls
4978 899 Pls
4995 913 Pls
5012 927 Pls
5029 942 Pls
5046 956 Pls
5064 971 Pls
5081 986 Pls
5098 1000 Pls
5115 1014 Pls
5132 1028 Pls
5150 1042 Pls
5167 1056 Pls
5184 1069 Pls
5201 1082 Pls
5218 1095 Pls
5236 1107 Pls
5253 1120 Pls
5270 1132 Pls
5287 1143 Pls
5304 1155 Pls
5322 1166 Pls
5339 1176 Pls
5356 1187 Pls
5373 1197 Pls
5390 1207 Pls
5408 1216 Pls
5425 1225 Pls
5442 1234 Pls
5459 1243 Pls
5476 1252 Pls
5494 1260 Pls
5511 1268 Pls
5528 1276 Pls
5545 1283 Pls
5562 1290 Pls
5580 1298 Pls
5597 1304 Pls
5614 1311 Pls
5631 1318 Pls
5648 1324 Pls
5666 1330 Pls
5683 1336 Pls
5700 1342 Pls
5717 1348 Pls
5734 1353 Pls
5752 1359 Pls
5769 1364 Pls
5786 1369 Pls
5803 1374 Pls
5820 1379 Pls
5838 1384 Pls
5855 1389 Pls
5872 1393 Pls
5889 1398 Pls
5906 1402 Pls
5924 1407 Pls
5941 1411 Pls
5958 1415 Pls
5975 1419 Pls
5992 1423 Pls
6010 1427 Pls
6027 1431 Pls
6044 1435 Pls
6061 1438 Pls
6078 1442 Pls
6096 1446 Pls
6113 1449 Pls
6130 1452 Pls
6147 1456 Pls
6164 1459 Pls
6182 1462 Pls
6199 1465 Pls
6216 1469 Pls
6233 1472 Pls
6250 1475 Pls
6268 1478 Pls
6285 1480 Pls
6302 1483 Pls
6319 1486 Pls
6336 1489 Pls
6354 1492 Pls
6371 1494 Pls
6388 1496 Pls
6405 1499 Pls
6422 1502 Pls
6440 1504 Pls
6457 1506 Pls
6474 1508 Pls
6491 1511 Pls
6508 1513 Pls
6526 1515 Pls
6543 1517 Pls
6560 1519 Pls
6577 1521 Pls
6594 1523 Pls
6612 1524 Pls
6629 1526 Pls
6646 1528 Pls
6663 1529 Pls
6680 1531 Pls
6698 1532 Pls
6715 1534 Pls
6732 1535 Pls
6749 1536 Pls
6766 1537 Pls
6784 1538 Pls
6801 1539 Pls
6818 1540 Pls
6835 1541 Pls
6852 1542 Pls
6870 1542 Pls
6887 1543 Pls
6904 1543 Pls
6921 1544 Pls
6938 1544 Pls
6956 1544 Pls
6973 1544 Pls
6990 1544 Pls
6622 4739 Pls
1.000 UL
LTb
798 4872 N
798 280 L
6192 0 V
0 4592 V
-6192 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
