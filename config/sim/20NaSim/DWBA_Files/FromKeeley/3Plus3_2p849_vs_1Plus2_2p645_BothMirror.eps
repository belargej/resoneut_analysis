%!PS-Adobe-2.0 EPSF-2.0
%%Title: 3Plus3_2p849_vs_1Plus2_2p645_BothMirror.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Jan 28 11:59:02 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (3Plus3_2p849_vs_1Plus2_2p645_BothMirror.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (belaja12,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan 28 11:59:02 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
882 280 M
63 0 V
6045 0 R
-63 0 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
882 556 M
31 0 V
6077 0 R
-31 0 V
882 922 M
31 0 V
6077 0 R
-31 0 V
882 1109 M
31 0 V
6077 0 R
-31 0 V
882 1198 M
63 0 V
6045 0 R
-63 0 V
stroke
798 1198 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
882 1475 M
31 0 V
6077 0 R
-31 0 V
882 1840 M
31 0 V
6077 0 R
-31 0 V
882 2028 M
31 0 V
6077 0 R
-31 0 V
882 2117 M
63 0 V
6045 0 R
-63 0 V
stroke
798 2117 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
882 2393 M
31 0 V
6077 0 R
-31 0 V
882 2759 M
31 0 V
6077 0 R
-31 0 V
882 2946 M
31 0 V
6077 0 R
-31 0 V
882 3035 M
63 0 V
6045 0 R
-63 0 V
stroke
798 3035 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
882 3312 M
31 0 V
6077 0 R
-31 0 V
882 3677 M
31 0 V
6077 0 R
-31 0 V
882 3865 M
31 0 V
6077 0 R
-31 0 V
882 3954 M
63 0 V
6045 0 R
-63 0 V
stroke
798 3954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
882 4230 M
31 0 V
6077 0 R
-31 0 V
882 4596 M
31 0 V
6077 0 R
-31 0 V
882 4783 M
31 0 V
6077 0 R
-31 0 V
882 4872 M
63 0 V
6045 0 R
-63 0 V
stroke
798 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
882 280 M
0 63 V
0 4529 R
0 -63 V
stroke
882 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1561 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1561 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
2239 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2239 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
2918 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2918 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
3597 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3597 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
4275 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4275 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
4954 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4954 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 120)]
] -46.7 MCshow
1.000 UL
LTb
5633 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5633 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 140)]
] -46.7 MCshow
1.000 UL
LTb
6311 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6311 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 160)]
] -46.7 MCshow
1.000 UL
LTb
6990 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6990 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 180)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
882 4872 N
882 280 L
6108 0 V
0 4592 V
-6108 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (2.849MeV as 3)]
[(Helvetica) 112.0 70.0 true true 0 (+)]
[(Helvetica) 112.0 -42.0 true true 0 (3)]
[(Helvetica) 140.0 0.0 true true 0 ( Mirror)]
] -46.7 MRshow
LT0
882 3447 Pls
899 3447 Pls
916 3447 Pls
933 3447 Pls
950 3447 Pls
967 3447 Pls
984 3447 Pls
1001 3447 Pls
1018 3447 Pls
1035 3447 Pls
1052 3447 Pls
1069 3447 Pls
1086 3447 Pls
1103 3447 Pls
1120 3447 Pls
1136 3447 Pls
1153 3447 Pls
1170 3447 Pls
1187 3447 Pls
1204 3447 Pls
1221 3447 Pls
1238 3447 Pls
1255 3446 Pls
1272 3446 Pls
1289 3446 Pls
1306 3445 Pls
1323 3444 Pls
1340 3444 Pls
1357 3443 Pls
1374 3442 Pls
1391 3441 Pls
1408 3440 Pls
1425 3439 Pls
1442 3438 Pls
1459 3436 Pls
1476 3434 Pls
1493 3433 Pls
1510 3431 Pls
1527 3429 Pls
1544 3427 Pls
1561 3425 Pls
1578 3422 Pls
1595 3420 Pls
1612 3417 Pls
1629 3414 Pls
1645 3411 Pls
1662 3407 Pls
1679 3404 Pls
1696 3400 Pls
1713 3396 Pls
1730 3392 Pls
1747 3388 Pls
1764 3384 Pls
1781 3379 Pls
1798 3374 Pls
1815 3369 Pls
1832 3364 Pls
1849 3359 Pls
1866 3353 Pls
1883 3347 Pls
1900 3341 Pls
1917 3335 Pls
1934 3329 Pls
1951 3322 Pls
1968 3315 Pls
1985 3308 Pls
2002 3301 Pls
2019 3293 Pls
2036 3285 Pls
2053 3278 Pls
2070 3269 Pls
2087 3261 Pls
2104 3252 Pls
2121 3243 Pls
2138 3234 Pls
2154 3225 Pls
2171 3215 Pls
2188 3205 Pls
2205 3195 Pls
2222 3184 Pls
2239 3174 Pls
2256 3163 Pls
2273 3152 Pls
2290 3140 Pls
2307 3129 Pls
2324 3116 Pls
2341 3104 Pls
2358 3092 Pls
2375 3079 Pls
2392 3066 Pls
2409 3053 Pls
2426 3039 Pls
2443 3026 Pls
2460 3011 Pls
2477 2997 Pls
2494 2982 Pls
2511 2967 Pls
2528 2952 Pls
2545 2937 Pls
2562 2921 Pls
2579 2905 Pls
2596 2888 Pls
2613 2872 Pls
2630 2855 Pls
2647 2837 Pls
2663 2820 Pls
2680 2802 Pls
2697 2784 Pls
2714 2765 Pls
2731 2746 Pls
2748 2727 Pls
2765 2708 Pls
2782 2688 Pls
2799 2668 Pls
2816 2648 Pls
2833 2627 Pls
2850 2606 Pls
2867 2585 Pls
2884 2563 Pls
2901 2541 Pls
2918 2519 Pls
2935 2496 Pls
2952 2473 Pls
2969 2450 Pls
2986 2427 Pls
3003 2403 Pls
3020 2379 Pls
3037 2354 Pls
3054 2330 Pls
3071 2305 Pls
3088 2280 Pls
3105 2254 Pls
3122 2228 Pls
3139 2203 Pls
3156 2177 Pls
3172 2150 Pls
3189 2124 Pls
3206 2098 Pls
3223 2071 Pls
3240 2045 Pls
3257 2019 Pls
3274 1993 Pls
3291 1967 Pls
3308 1941 Pls
3325 1916 Pls
3342 1891 Pls
3359 1866 Pls
3376 1843 Pls
3393 1819 Pls
3410 1797 Pls
3427 1776 Pls
3444 1755 Pls
3461 1736 Pls
3478 1718 Pls
3495 1701 Pls
3512 1686 Pls
3529 1672 Pls
3546 1659 Pls
3563 1647 Pls
3580 1638 Pls
3597 1629 Pls
3614 1622 Pls
3631 1616 Pls
3648 1612 Pls
3665 1609 Pls
3681 1606 Pls
3698 1605 Pls
3715 1605 Pls
3732 1606 Pls
3749 1607 Pls
3766 1609 Pls
3783 1611 Pls
3800 1614 Pls
3817 1617 Pls
3834 1621 Pls
3851 1625 Pls
3868 1629 Pls
3885 1633 Pls
3902 1637 Pls
3919 1641 Pls
3936 1645 Pls
3953 1649 Pls
3970 1652 Pls
3987 1656 Pls
4004 1660 Pls
4021 1663 Pls
4038 1666 Pls
4055 1669 Pls
4072 1672 Pls
4089 1674 Pls
4106 1676 Pls
4123 1678 Pls
4140 1680 Pls
4157 1681 Pls
4174 1682 Pls
4190 1683 Pls
4207 1684 Pls
4224 1684 Pls
4241 1684 Pls
4258 1684 Pls
4275 1683 Pls
4292 1683 Pls
4309 1681 Pls
4326 1680 Pls
4343 1679 Pls
4360 1677 Pls
4377 1675 Pls
4394 1673 Pls
4411 1670 Pls
4428 1667 Pls
4445 1664 Pls
4462 1661 Pls
4479 1657 Pls
4496 1654 Pls
4513 1650 Pls
4530 1645 Pls
4547 1641 Pls
4564 1636 Pls
4581 1632 Pls
4598 1626 Pls
4615 1621 Pls
4632 1616 Pls
4649 1610 Pls
4666 1604 Pls
4683 1598 Pls
4699 1592 Pls
4716 1585 Pls
4733 1579 Pls
4750 1572 Pls
4767 1565 Pls
4784 1558 Pls
4801 1550 Pls
4818 1543 Pls
4835 1535 Pls
4852 1527 Pls
4869 1519 Pls
4886 1511 Pls
4903 1503 Pls
4920 1495 Pls
4937 1486 Pls
4954 1477 Pls
4971 1469 Pls
4988 1460 Pls
5005 1451 Pls
5022 1441 Pls
5039 1432 Pls
5056 1423 Pls
5073 1413 Pls
5090 1404 Pls
5107 1394 Pls
5124 1384 Pls
5141 1374 Pls
5158 1364 Pls
5175 1354 Pls
5192 1344 Pls
5208 1334 Pls
5225 1324 Pls
5242 1314 Pls
5259 1303 Pls
5276 1293 Pls
5293 1283 Pls
5310 1272 Pls
5327 1261 Pls
5344 1251 Pls
5361 1240 Pls
5378 1229 Pls
5395 1219 Pls
5412 1208 Pls
5429 1197 Pls
5446 1186 Pls
5463 1175 Pls
5480 1164 Pls
5497 1153 Pls
5514 1143 Pls
5531 1132 Pls
5548 1121 Pls
5565 1109 Pls
5582 1098 Pls
5599 1087 Pls
5616 1076 Pls
5633 1065 Pls
5650 1054 Pls
5667 1043 Pls
5684 1032 Pls
5701 1021 Pls
5717 1010 Pls
5734 999 Pls
5751 988 Pls
5768 976 Pls
5785 965 Pls
5802 954 Pls
5819 944 Pls
5836 933 Pls
5853 922 Pls
5870 911 Pls
5887 900 Pls
5904 890 Pls
5921 879 Pls
5938 868 Pls
5955 858 Pls
5972 848 Pls
5989 837 Pls
6006 827 Pls
6023 817 Pls
6040 807 Pls
6057 798 Pls
6074 788 Pls
6091 779 Pls
6108 769 Pls
6125 760 Pls
6142 751 Pls
6159 742 Pls
6176 734 Pls
6193 725 Pls
6210 717 Pls
6226 709 Pls
6243 701 Pls
6260 693 Pls
6277 685 Pls
6294 678 Pls
6311 671 Pls
6328 664 Pls
6345 657 Pls
6362 650 Pls
6379 644 Pls
6396 638 Pls
6413 632 Pls
6430 626 Pls
6447 620 Pls
6464 614 Pls
6481 609 Pls
6498 604 Pls
6515 599 Pls
6532 594 Pls
6549 589 Pls
6566 585 Pls
6583 580 Pls
6600 576 Pls
6617 572 Pls
6634 568 Pls
6651 565 Pls
6668 561 Pls
6685 558 Pls
6702 555 Pls
6719 552 Pls
6735 549 Pls
6752 546 Pls
6769 544 Pls
6786 541 Pls
6803 539 Pls
6820 537 Pls
6837 536 Pls
6854 534 Pls
6871 533 Pls
6888 531 Pls
6905 530 Pls
6922 529 Pls
6939 529 Pls
6956 528 Pls
6973 528 Pls
6990 528 Pls
6622 4739 Pls
1.000 UP
1.000 UL
LT1
LTb
6339 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (2.645MeV as 1)]
[(Helvetica) 112.0 70.0 true true 0 (+)]
[(Helvetica) 112.0 -42.0 true true 0 (2)]
[(Helvetica) 140.0 0.0 true true 0 ( Mirror)]
] -46.7 MRshow
LT1
882 4667 Crs
899 4667 Crs
916 4666 Crs
933 4664 Crs
950 4662 Crs
967 4659 Crs
984 4655 Crs
1001 4651 Crs
1018 4646 Crs
1035 4641 Crs
1052 4635 Crs
1069 4628 Crs
1086 4621 Crs
1103 4612 Crs
1120 4604 Crs
1136 4594 Crs
1153 4585 Crs
1170 4574 Crs
1187 4563 Crs
1204 4551 Crs
1221 4539 Crs
1238 4526 Crs
1255 4513 Crs
1272 4499 Crs
1289 4484 Crs
1306 4469 Crs
1323 4453 Crs
1340 4437 Crs
1357 4420 Crs
1374 4403 Crs
1391 4385 Crs
1408 4367 Crs
1425 4348 Crs
1442 4329 Crs
1459 4310 Crs
1476 4290 Crs
1493 4269 Crs
1510 4249 Crs
1527 4228 Crs
1544 4206 Crs
1561 4185 Crs
1578 4163 Crs
1595 4141 Crs
1612 4118 Crs
1629 4096 Crs
1645 4073 Crs
1662 4051 Crs
1679 4028 Crs
1696 4006 Crs
1713 3983 Crs
1730 3960 Crs
1747 3938 Crs
1764 3916 Crs
1781 3894 Crs
1798 3872 Crs
1815 3851 Crs
1832 3830 Crs
1849 3810 Crs
1866 3790 Crs
1883 3770 Crs
1900 3752 Crs
1917 3733 Crs
1934 3716 Crs
1951 3699 Crs
1968 3682 Crs
1985 3667 Crs
2002 3652 Crs
2019 3637 Crs
2036 3624 Crs
2053 3611 Crs
2070 3598 Crs
2087 3586 Crs
2104 3575 Crs
2121 3564 Crs
2138 3554 Crs
2154 3544 Crs
2171 3535 Crs
2188 3526 Crs
2205 3517 Crs
2222 3508 Crs
2239 3500 Crs
2256 3492 Crs
2273 3484 Crs
2290 3476 Crs
2307 3469 Crs
2324 3461 Crs
2341 3453 Crs
2358 3446 Crs
2375 3438 Crs
2392 3430 Crs
2409 3422 Crs
2426 3414 Crs
2443 3406 Crs
2460 3398 Crs
2477 3390 Crs
2494 3381 Crs
2511 3373 Crs
2528 3364 Crs
2545 3355 Crs
2562 3346 Crs
2579 3336 Crs
2596 3327 Crs
2613 3317 Crs
2630 3307 Crs
2647 3297 Crs
2663 3287 Crs
2680 3276 Crs
2697 3266 Crs
2714 3255 Crs
2731 3244 Crs
2748 3233 Crs
2765 3221 Crs
2782 3210 Crs
2799 3199 Crs
2816 3187 Crs
2833 3175 Crs
2850 3163 Crs
2867 3151 Crs
2884 3139 Crs
2901 3127 Crs
2918 3115 Crs
2935 3102 Crs
2952 3090 Crs
2969 3078 Crs
2986 3065 Crs
3003 3053 Crs
3020 3041 Crs
3037 3028 Crs
3054 3016 Crs
3071 3004 Crs
3088 2991 Crs
3105 2979 Crs
3122 2967 Crs
3139 2955 Crs
3156 2943 Crs
3172 2931 Crs
3189 2919 Crs
3206 2907 Crs
3223 2895 Crs
3240 2884 Crs
3257 2872 Crs
3274 2860 Crs
3291 2849 Crs
3308 2838 Crs
3325 2827 Crs
3342 2815 Crs
3359 2804 Crs
3376 2793 Crs
3393 2783 Crs
3410 2772 Crs
3427 2761 Crs
3444 2750 Crs
3461 2739 Crs
3478 2729 Crs
3495 2718 Crs
3512 2707 Crs
3529 2697 Crs
3546 2686 Crs
3563 2675 Crs
3580 2665 Crs
3597 2654 Crs
3614 2643 Crs
3631 2632 Crs
3648 2621 Crs
3665 2610 Crs
3681 2599 Crs
3698 2588 Crs
3715 2576 Crs
3732 2565 Crs
3749 2553 Crs
3766 2541 Crs
3783 2529 Crs
3800 2517 Crs
3817 2505 Crs
3834 2492 Crs
3851 2479 Crs
3868 2466 Crs
3885 2453 Crs
3902 2440 Crs
3919 2426 Crs
3936 2412 Crs
3953 2397 Crs
3970 2383 Crs
3987 2368 Crs
4004 2353 Crs
4021 2337 Crs
4038 2322 Crs
4055 2306 Crs
4072 2290 Crs
4089 2273 Crs
4106 2256 Crs
4123 2239 Crs
4140 2221 Crs
4157 2203 Crs
4174 2185 Crs
4190 2167 Crs
4207 2148 Crs
4224 2129 Crs
4241 2109 Crs
4258 2090 Crs
4275 2070 Crs
4292 2049 Crs
4309 2029 Crs
4326 2008 Crs
4343 1988 Crs
4360 1967 Crs
4377 1946 Crs
4394 1924 Crs
4411 1903 Crs
4428 1882 Crs
4445 1861 Crs
4462 1840 Crs
4479 1820 Crs
4496 1799 Crs
4513 1779 Crs
4530 1760 Crs
4547 1741 Crs
4564 1723 Crs
4581 1706 Crs
4598 1690 Crs
4615 1674 Crs
4632 1660 Crs
4649 1647 Crs
4666 1636 Crs
4683 1626 Crs
4699 1618 Crs
4716 1611 Crs
4733 1606 Crs
4750 1602 Crs
4767 1600 Crs
4784 1599 Crs
4801 1600 Crs
4818 1603 Crs
4835 1606 Crs
4852 1611 Crs
4869 1618 Crs
4886 1625 Crs
4903 1633 Crs
4920 1641 Crs
4937 1651 Crs
4954 1661 Crs
4971 1671 Crs
4988 1682 Crs
5005 1693 Crs
5022 1705 Crs
5039 1716 Crs
5056 1728 Crs
5073 1740 Crs
5090 1751 Crs
5107 1763 Crs
5124 1774 Crs
5141 1786 Crs
5158 1797 Crs
5175 1808 Crs
5192 1819 Crs
5208 1830 Crs
5225 1840 Crs
5242 1850 Crs
5259 1860 Crs
5276 1870 Crs
5293 1880 Crs
5310 1889 Crs
5327 1898 Crs
5344 1907 Crs
5361 1915 Crs
5378 1924 Crs
5395 1932 Crs
5412 1940 Crs
5429 1947 Crs
5446 1955 Crs
5463 1962 Crs
5480 1969 Crs
5497 1976 Crs
5514 1982 Crs
5531 1989 Crs
5548 1995 Crs
5565 2001 Crs
5582 2007 Crs
5599 2012 Crs
5616 2018 Crs
5633 2023 Crs
5650 2029 Crs
5667 2034 Crs
5684 2039 Crs
5701 2043 Crs
5717 2048 Crs
5734 2053 Crs
5751 2057 Crs
5768 2061 Crs
5785 2066 Crs
5802 2070 Crs
5819 2074 Crs
5836 2078 Crs
5853 2082 Crs
5870 2085 Crs
5887 2089 Crs
5904 2093 Crs
5921 2096 Crs
5938 2100 Crs
5955 2103 Crs
5972 2106 Crs
5989 2110 Crs
6006 2113 Crs
6023 2116 Crs
6040 2119 Crs
6057 2122 Crs
6074 2125 Crs
6091 2128 Crs
6108 2131 Crs
6125 2134 Crs
6142 2136 Crs
6159 2139 Crs
6176 2142 Crs
6193 2144 Crs
6210 2147 Crs
6226 2149 Crs
6243 2152 Crs
6260 2154 Crs
6277 2157 Crs
6294 2159 Crs
6311 2161 Crs
6328 2163 Crs
6345 2166 Crs
6362 2168 Crs
6379 2169 Crs
6396 2172 Crs
6413 2174 Crs
6430 2176 Crs
6447 2177 Crs
6464 2179 Crs
6481 2181 Crs
6498 2183 Crs
6515 2185 Crs
6532 2186 Crs
6549 2188 Crs
6566 2190 Crs
6583 2191 Crs
6600 2193 Crs
6617 2194 Crs
6634 2195 Crs
6651 2196 Crs
6668 2198 Crs
6685 2199 Crs
6702 2200 Crs
6719 2201 Crs
6735 2202 Crs
6752 2203 Crs
6769 2204 Crs
6786 2205 Crs
6803 2206 Crs
6820 2206 Crs
6837 2207 Crs
6854 2208 Crs
6871 2208 Crs
6888 2209 Crs
6905 2209 Crs
6922 2209 Crs
6939 2210 Crs
6956 2210 Crs
6973 2210 Crs
6990 2210 Crs
6622 4599 Crs
1.000 UL
LTb
882 4872 N
882 280 L
6108 0 V
0 4592 V
-6108 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
