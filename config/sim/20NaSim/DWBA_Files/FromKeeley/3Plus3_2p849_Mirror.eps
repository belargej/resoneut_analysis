%!PS-Adobe-2.0 EPSF-2.0
%%Title: 3Plus3_2p849_Mirror.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Jan 28 11:51:33 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (3Plus3_2p849_Mirror.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (belaja12,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan 28 11:51:33 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
882 280 M
63 0 V
6045 0 R
-63 0 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
882 626 M
31 0 V
6077 0 R
-31 0 V
882 828 M
31 0 V
6077 0 R
-31 0 V
882 971 M
31 0 V
6077 0 R
-31 0 V
882 1082 M
31 0 V
6077 0 R
-31 0 V
882 1173 M
31 0 V
6077 0 R
-31 0 V
882 1250 M
31 0 V
6077 0 R
-31 0 V
882 1317 M
31 0 V
6077 0 R
-31 0 V
882 1375 M
31 0 V
6077 0 R
-31 0 V
882 1428 M
63 0 V
6045 0 R
-63 0 V
stroke
798 1428 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
882 1774 M
31 0 V
6077 0 R
-31 0 V
882 1976 M
31 0 V
6077 0 R
-31 0 V
882 2119 M
31 0 V
6077 0 R
-31 0 V
882 2230 M
31 0 V
6077 0 R
-31 0 V
882 2321 M
31 0 V
6077 0 R
-31 0 V
882 2398 M
31 0 V
6077 0 R
-31 0 V
882 2465 M
31 0 V
6077 0 R
-31 0 V
882 2523 M
31 0 V
6077 0 R
-31 0 V
882 2576 M
63 0 V
6045 0 R
-63 0 V
stroke
798 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
882 2922 M
31 0 V
6077 0 R
-31 0 V
882 3124 M
31 0 V
6077 0 R
-31 0 V
882 3267 M
31 0 V
6077 0 R
-31 0 V
882 3378 M
31 0 V
6077 0 R
-31 0 V
882 3469 M
31 0 V
6077 0 R
-31 0 V
882 3546 M
31 0 V
6077 0 R
-31 0 V
882 3613 M
31 0 V
6077 0 R
-31 0 V
882 3671 M
31 0 V
6077 0 R
-31 0 V
882 3724 M
63 0 V
6045 0 R
-63 0 V
stroke
798 3724 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
882 4070 M
31 0 V
6077 0 R
-31 0 V
882 4272 M
31 0 V
6077 0 R
-31 0 V
882 4415 M
31 0 V
6077 0 R
-31 0 V
882 4526 M
31 0 V
6077 0 R
-31 0 V
882 4617 M
31 0 V
6077 0 R
-31 0 V
882 4694 M
31 0 V
6077 0 R
-31 0 V
882 4761 M
31 0 V
6077 0 R
-31 0 V
882 4819 M
31 0 V
6077 0 R
-31 0 V
882 4872 M
63 0 V
6045 0 R
-63 0 V
stroke
798 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
882 280 M
0 63 V
0 4529 R
0 -63 V
stroke
882 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1561 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1561 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
2239 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2239 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
2918 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2918 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
3597 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3597 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
4275 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4275 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
4954 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4954 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 120)]
] -46.7 MCshow
1.000 UL
LTb
5633 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5633 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 140)]
] -46.7 MCshow
1.000 UL
LTb
6311 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6311 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 160)]
] -46.7 MCshow
1.000 UL
LTb
6990 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6990 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 180)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
882 4872 N
882 280 L
6108 0 V
0 4592 V
-6108 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (2.849MeV as 3)]
[(Helvetica) 112.0 70.0 true true 0 (+)]
[(Helvetica) 112.0 -42.0 true true 0 (3)]
] -46.7 MRshow
LT0
882 4239 Pls
899 4239 Pls
916 4239 Pls
933 4239 Pls
950 4239 Pls
967 4239 Pls
984 4239 Pls
1001 4239 Pls
1018 4239 Pls
1035 4239 Pls
1052 4239 Pls
1069 4239 Pls
1086 4239 Pls
1103 4239 Pls
1120 4239 Pls
1136 4239 Pls
1153 4239 Pls
1170 4239 Pls
1187 4239 Pls
1204 4239 Pls
1221 4239 Pls
1238 4238 Pls
1255 4238 Pls
1272 4238 Pls
1289 4237 Pls
1306 4236 Pls
1323 4236 Pls
1340 4235 Pls
1357 4234 Pls
1374 4233 Pls
1391 4231 Pls
1408 4230 Pls
1425 4229 Pls
1442 4227 Pls
1459 4225 Pls
1476 4223 Pls
1493 4221 Pls
1510 4219 Pls
1527 4216 Pls
1544 4213 Pls
1561 4211 Pls
1578 4208 Pls
1595 4204 Pls
1612 4201 Pls
1629 4197 Pls
1645 4193 Pls
1662 4189 Pls
1679 4185 Pls
1696 4180 Pls
1713 4176 Pls
1730 4171 Pls
1747 4165 Pls
1764 4160 Pls
1781 4154 Pls
1798 4148 Pls
1815 4142 Pls
1832 4135 Pls
1849 4129 Pls
1866 4122 Pls
1883 4114 Pls
1900 4107 Pls
1917 4099 Pls
1934 4091 Pls
1951 4083 Pls
1968 4074 Pls
1985 4065 Pls
2002 4056 Pls
2019 4047 Pls
2036 4037 Pls
2053 4027 Pls
2070 4016 Pls
2087 4006 Pls
2104 3995 Pls
2121 3984 Pls
2138 3972 Pls
2154 3961 Pls
2171 3949 Pls
2188 3936 Pls
2205 3923 Pls
2222 3911 Pls
2239 3897 Pls
2256 3883 Pls
2273 3870 Pls
2290 3855 Pls
2307 3841 Pls
2324 3826 Pls
2341 3810 Pls
2358 3795 Pls
2375 3779 Pls
2392 3763 Pls
2409 3746 Pls
2426 3729 Pls
2443 3712 Pls
2460 3694 Pls
2477 3676 Pls
2494 3658 Pls
2511 3639 Pls
2528 3620 Pls
2545 3601 Pls
2562 3581 Pls
2579 3561 Pls
2596 3540 Pls
2613 3520 Pls
2630 3498 Pls
2647 3477 Pls
2663 3455 Pls
2680 3432 Pls
2697 3410 Pls
2714 3387 Pls
2731 3363 Pls
2748 3339 Pls
2765 3315 Pls
2782 3290 Pls
2799 3265 Pls
2816 3240 Pls
2833 3214 Pls
2850 3187 Pls
2867 3161 Pls
2884 3134 Pls
2901 3106 Pls
2918 3079 Pls
2935 3050 Pls
2952 3022 Pls
2969 2993 Pls
2986 2963 Pls
3003 2933 Pls
3020 2903 Pls
3037 2873 Pls
3054 2842 Pls
3071 2811 Pls
3088 2779 Pls
3105 2748 Pls
3122 2716 Pls
3139 2683 Pls
3156 2651 Pls
3172 2618 Pls
3189 2585 Pls
3206 2552 Pls
3223 2519 Pls
3240 2486 Pls
3257 2454 Pls
3274 2421 Pls
3291 2388 Pls
3308 2356 Pls
3325 2325 Pls
3342 2293 Pls
3359 2263 Pls
3376 2233 Pls
3393 2204 Pls
3410 2176 Pls
3427 2150 Pls
3444 2124 Pls
3461 2100 Pls
3478 2078 Pls
3495 2056 Pls
3512 2037 Pls
3529 2019 Pls
3546 2004 Pls
3563 1989 Pls
3580 1977 Pls
3597 1967 Pls
3614 1958 Pls
3631 1951 Pls
3648 1945 Pls
3665 1941 Pls
3681 1938 Pls
3698 1937 Pls
3715 1936 Pls
3732 1937 Pls
3749 1939 Pls
3766 1941 Pls
3783 1944 Pls
3800 1948 Pls
3817 1952 Pls
3834 1956 Pls
3851 1961 Pls
3868 1966 Pls
3885 1971 Pls
3902 1976 Pls
3919 1981 Pls
3936 1986 Pls
3953 1991 Pls
3970 1996 Pls
3987 2000 Pls
4004 2004 Pls
4021 2009 Pls
4038 2013 Pls
4055 2016 Pls
4072 2019 Pls
4089 2022 Pls
4106 2025 Pls
4123 2027 Pls
4140 2030 Pls
4157 2031 Pls
4174 2033 Pls
4190 2034 Pls
4207 2034 Pls
4224 2035 Pls
4241 2035 Pls
4258 2035 Pls
4275 2034 Pls
4292 2033 Pls
4309 2032 Pls
4326 2030 Pls
4343 2028 Pls
4360 2026 Pls
4377 2024 Pls
4394 2021 Pls
4411 2017 Pls
4428 2014 Pls
4445 2010 Pls
4462 2006 Pls
4479 2002 Pls
4496 1997 Pls
4513 1992 Pls
4530 1987 Pls
4547 1981 Pls
4564 1976 Pls
4581 1969 Pls
4598 1963 Pls
4615 1957 Pls
4632 1950 Pls
4649 1943 Pls
4666 1935 Pls
4683 1928 Pls
4699 1920 Pls
4716 1912 Pls
4733 1903 Pls
4750 1895 Pls
4767 1886 Pls
4784 1877 Pls
4801 1868 Pls
4818 1859 Pls
4835 1849 Pls
4852 1839 Pls
4869 1829 Pls
4886 1819 Pls
4903 1809 Pls
4920 1798 Pls
4937 1788 Pls
4954 1777 Pls
4971 1766 Pls
4988 1755 Pls
5005 1743 Pls
5022 1732 Pls
5039 1720 Pls
5056 1708 Pls
5073 1697 Pls
5090 1685 Pls
5107 1673 Pls
5124 1660 Pls
5141 1648 Pls
5158 1635 Pls
5175 1623 Pls
5192 1610 Pls
5208 1598 Pls
5225 1585 Pls
5242 1572 Pls
5259 1559 Pls
5276 1546 Pls
5293 1533 Pls
5310 1520 Pls
5327 1507 Pls
5344 1493 Pls
5361 1480 Pls
5378 1467 Pls
5395 1453 Pls
5412 1440 Pls
5429 1426 Pls
5446 1413 Pls
5463 1399 Pls
5480 1386 Pls
5497 1372 Pls
5514 1358 Pls
5531 1344 Pls
5548 1331 Pls
5565 1317 Pls
5582 1303 Pls
5599 1289 Pls
5616 1275 Pls
5633 1261 Pls
5650 1248 Pls
5667 1234 Pls
5684 1220 Pls
5701 1206 Pls
5717 1192 Pls
5734 1178 Pls
5751 1164 Pls
5768 1151 Pls
5785 1137 Pls
5802 1123 Pls
5819 1109 Pls
5836 1096 Pls
5853 1082 Pls
5870 1069 Pls
5887 1055 Pls
5904 1042 Pls
5921 1029 Pls
5938 1016 Pls
5955 1003 Pls
5972 990 Pls
5989 977 Pls
6006 964 Pls
6023 952 Pls
6040 939 Pls
6057 927 Pls
6074 915 Pls
6091 903 Pls
6108 892 Pls
6125 880 Pls
6142 869 Pls
6159 858 Pls
6176 847 Pls
6193 836 Pls
6210 826 Pls
6226 816 Pls
6243 806 Pls
6260 796 Pls
6277 787 Pls
6294 777 Pls
6311 768 Pls
6328 760 Pls
6345 751 Pls
6362 743 Pls
6379 735 Pls
6396 727 Pls
6413 719 Pls
6430 712 Pls
6447 705 Pls
6464 698 Pls
6481 691 Pls
6498 685 Pls
6515 679 Pls
6532 672 Pls
6549 666 Pls
6566 661 Pls
6583 656 Pls
6600 650 Pls
6617 645 Pls
6634 641 Pls
6651 636 Pls
6668 632 Pls
6685 627 Pls
6702 624 Pls
6719 620 Pls
6735 616 Pls
6752 613 Pls
6769 610 Pls
6786 607 Pls
6803 604 Pls
6820 602 Pls
6837 599 Pls
6854 598 Pls
6871 596 Pls
6888 594 Pls
6905 593 Pls
6922 592 Pls
6939 591 Pls
6956 590 Pls
6973 590 Pls
6990 590 Pls
6622 4739 Pls
1.000 UL
LTb
882 4872 N
882 280 L
6108 0 V
0 4592 V
-6108 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
